<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Side_Navigation_Skin" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../../../" data-mc-has-content-body="True" data-mc-searchable="False" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta name="zd-site-verification" content="9muqcovj07pyvoduai2al" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../../Skins/Favicons/browserconfig.xml" />
        <meta name="description" content="Learn how to configure a universal webhook connector to send security notifications to your third-party application in near real time so you can respond quickly." />
        <link rel="apple-touch-icon" sizes="1545x1545" href="../../../../../Skins/Favicons/AlertLogic_Logo_2C_RGB_V_Standard.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" /><title>Configure a Universal Webhook Connector</title>
        <meta http-equiv="Cache-control" content="no-cache" />
        <link href="../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <style>@import url('https://richg-github.github.io/al-styles/override-main.css');

</style>
        <link href="../../../../Resources/Stylesheets/MainStyles.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.next-topic-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.separator-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.print-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.expand-all-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.needs-pie
{
	behavior: url('../../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link rel="apple-touch-icon" sizes="1545x1545" href="../../../../../Skins/Favicons/AlertLogic_Logo_2C_RGB_V_Standard.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 1279px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../../../home.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <div class="buttons popup-container clearfix topicToolbarProxy _Skins_Toolbar mc-component nocontent" style="mc-topic-toolbar-items: ;">
                                        <div class="button-group-container-left">
                                            <button class="button needs-pie previous-topic-button" title="Navigate previous" disabled="true">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Navigate previous">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                            <button class="button needs-pie next-topic-button" title="Navigate next" disabled="true">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Navigate next">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                            <div class="button-separator">
                                            </div>
                                            <button class="button needs-pie print-button" title="Print">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Print">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                            <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                        </div>
                                    </div>
                                    <div role="main" id="mc-main-content">
                                        <h1>Configure a Universal Webhook Connector</h1>
                                        <p>You can configure a universal webhook connector in the <span class="mc-variable ALVariables.ALUI_1 variable">Alert Logic console</span>  to send <a href="../../../../configure/notifications.htm">notifications</a> to  any public-facing  HTTP endpoint. Connectors  allow you to send data directly to a third-party application in near real time. When  you set up a notification and subscribe a webhook connector, the connector sends the event to the target URL you configured and can generate a message or service ticket  automatically. </p>
                                        <p><span class="mc-variable ALVariables.PST_Product variable">Alert Logic</span> notifications alert you to threats, changes, and scheduled events in your environment so you can respond quickly. From the <span class="mc-variable ALVariables.ALUI_1 variable">Alert Logic console</span>, you can subscribe a webhook to receive:</p>
                                        <ul>
                                            <li><a href="../../../../configure/notifications/incident.htm">Incident notifications</a><span style="font-family: 'Microsoft Sans Serif'">—</span>Send an alert or generate a service ticket when incidents occur that meet specific criteria, such as escalated incidents.</li>
                                            <li><a href="../../../../configure/notifications/log-correlation.htm">Log correlation notifications</a><span style="font-family: 'Microsoft Sans Serif'">—</span>Send an alert or generate a service ticket when your log correlation rules trigger an incident or observation.</li>
                                            <li data-mc-conditions="Primary.Draft Content">Exposure alerts</li>
                                            <li><a href="../../../../configure/notifications/report.htm">Scheduled report notifications</a><span style="font-family: 'Microsoft Sans Serif'">—</span>Send a notification or generate as service ticket when <span class="mc-variable ALVariables.PST_Product variable">Alert Logic</span> generates a scheduled report  that is available for download.</li>
                                            <li data-mc-conditions="Primary.Draft Content">Scheduled search results</li>
                                        </ul>
                                        <p>Complete the following steps to successfully receive <span class="mc-variable ALVariables.Company variable">Alert Logic</span> notifications or generate service tickets  in your application:</p>
                                        <ol>
                                            <li value="1"><a href="#Setupthethird-partyapplication" class="MCXref xref">Set up the third-party application</a>
                                            </li>
                                            <li value="2"><a href="#Createtheuniversalwebhookconnector" class="MCXref xref">Create the universal webhook connector from the Alert Logic console</a>
                                            </li>
                                            <li value="3"><a href="#Subscribeyourwebhooktoreceivenotifications" class="MCXref xref">Subscribe your webhook to receive notifications </a>
                                            </li>
                                        </ol>
                                        <div class="note"><span class="mc-variable ALVariables.Company variable">Alert Logic</span> provides several fully supported webhoook connectors for commonly used messaging and ticketing systems. Customers are responsible for correctly configuring a universal webhook to connect to other applications. To assist your experienced DevOps professional with troubleshooting, <span class="mc-variable ALVariables.Company variable">Alert Logic</span> passes through all error messages sent by the target application.</div>
                                        <h2>Set up the third-party application<a name="Setupthethird-partyapplication"></a></h2>
                                        <p>Before you create the webhook connector in the <span class="mc-variable ALVariables.ALUI_1 variable">Alert Logic console</span>, gather the information that your third-party application requires by consulting the vendor documentation. Webhooks for third-party applications require some or all of the following information: </p>
                                        <p><b>Target URL</b>—Note the URL for your application that can accept <span class="mc-variable ALVariables.Company variable">Alert Logic</span> notifications or ticket creation requests. Some applications require that you generate a target URL&#160;that includes a token for authorization.</p>
                                        <p><b>Custom headers</b>—Some applications require one or more HTTP custom headers. Custom headers are name-value pairs in the format <i>Header-Name</i>: <i>value</i> with each header field on a separate line, for example:</p>
                                        <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                            <div style="mc-code-lang: PlainText;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>Accept: application/json<br />Content-Type: application/json</code></pre>
                                            </div>
                                        </div>
                                        <p><b>Authorization header</b>—Some applications require an HTTP Authorization request header. If your system requires a Basic Authorization header (user name and password encoded with base64), you can complete the instructions in <a href="#Generateauthorizationheader" class="MCXref xref">Generate an Authorization header</a> to specify the header. <span class="mc-variable ALVariables.Company variable">Alert Logic</span> stores your Authorization header securely when you save the connector.</p>
                                        <p><b>Payload type</b>—Decide which type of security information that you want <span class="mc-variable ALVariables.Company variable">Alert Logic</span> to send to your application:&#160;Incident, Observation (of a log correlation), or a Scheduled Report notification. If you want to send more than one payload type, configure a connector for each one. Separate connectors are required because each payload is different. </p>
                                        <p><b>Payload template</b>—<span class="mc-variable ALVariables.Company variable">Alert Logic</span> provides payload templates for an incident and an observation in JSON&#160;format. A payload template converts the <span class="mc-variable ALVariables.Company variable">Alert Logic</span> security information to the representation expected by your third-party application. You must customize  the payload template to meet the requirements of your  application and your security goals. </p>
                                        <h3>Generate an Authorization header<a name="Generateauthorizationheader"></a></h3>
                                        <p> If the third-party application to which you want to connect requires a Basic HTTP Authorization request header, you can use these instructions to generate the header. The command requires the valid user name and password in the application to which you want to connect, and it encodes the credentials with base64. </p>
                                        <p>In the Authorization Header field, you enter the word "Basic" (which is the Authorization header type), a space, and then the  base64-encoded credentials.</p>
                                        <p><b>To generate the header on Linux and Mac OS X:</b>
                                        </p>
                                        <ol>
                                            <li value="1">In the command line, type the following command, including the single quotation marks:<p><kbd>echo -n '&lt;user_name&gt;:&lt;password&gt;' | base64</kbd></p><p>where you must replace &lt;user_name&gt;&#160;and &lt;password&gt; with a valid user name and password for the third-party application.</p></li>
                                            <li value="2">Copy the following string, which you must enter in the <b>Authorization Header</b> field when you create the connector:<p><kbd>Basic &lt;resulting_base64_encoded_string&gt;</kbd></p></li>
                                        </ol>
                                        <div class="example">If the user name is "admin" and the password is "testpassword" for example, the command is:<br /><br /><kbd>echo -n 'admin:testpassword' | base64</kbd><br /><br />and the command produces this output: <br /><br /><kbd>YWRtaW46dGVzdHBhc3N3b3Jk</kbd><br /><br />So, in the <b>Authorization Header</b> field, you would paste:<br /><br /><kbd>Basic YWRtaW46dGVzdHBhc3N3b3Jk</kbd><br /><br /></div>
                                        <p><b>To generate the header in Windows PowerShell:</b>
                                        </p>
                                        <ol>
                                            <li value="1">In the command line, type the following commands, including the quotation marks:<p>PS c:\Temp&gt;<kbd>$auth  = [System.Text.Encoding]::UTF8.GetBytes("&lt;user_name&gt;:&lt;password&gt;")</kbd></p><p>where you must replace &lt;user_name&gt;&#160;and &lt;password&gt; with a valid user name and password for your third-party application.</p><p>PS c:\Temp&gt;<kbd>[System.Convert]::ToBase64String($auth)</kbd></p></li>
                                            <li value="2">Copy the following string, which you must enter in the <b>Authorization Header</b> field when you create the connector:<p><kbd>Basic &lt;resulting_base64_encoded_string&gt;</kbd></p></li>
                                        </ol>
                                        <div class="example">If the user name is "admin" and the password is "testpassword" for example, the commands are:<br /><br />PS C:\Temp&gt;<kbd>$auth  = [System.Text.Encoding]::UTF8.GetBytes("admin:testpassword")</kbd><br /><br />PS C:\Temp&gt;<kbd>[System.Convert]::ToBase64String($auth)</kbd><br /><br />and the command produces this output: <br /><br /><kbd>YWRtaW46dGVzdHBhc3N3b3Jk</kbd><br /><br />So, in the <b>Authorization Header</b> field, you would paste:<br /><br /><kbd>Basic YWRtaW46dGVzdHBhc3N3b3Jk</kbd><br /><br /></div>
                                        <h3>Customize the sample payload template</h3>
                                        <p><span class="mc-variable ALVariables.Company variable">Alert Logic</span> provides sample Incident and Observation payload templates  to help you get started in JSON format using Mustache template-like transformations where a field in the JSON payload can be referenced by enclosing it in braces ({{}}. For example, the threatRating field in the following JSON {'incident': {'threat.Rating': "critical"}} is specified as {{incident.threatRating}}. You must replace the attributes with the appropriate ones for your system. You can also add or remove lines. For definitions of the <span class="mc-variable ALVariables.Company variable">Alert Logic</span> variables in the samples and the full  JSON that you can use to configure your payload template, see:</p>
                                        <ul>
                                            <li><a href="incident.htm" class="MCXref xref">Incident Schema</a>
                                            </li>
                                            <li><a href="observation.htm" class="MCXref xref">Observation Schema</a>
                                            </li>
                                            <li><a href="scheduled-report-notification-payload.htm" class="MCXref xref">Scheduled Report Notification Schema</a>
                                            </li>
                                        </ul>
                                        <div class="note">For more information about Mustache, see the <a href="https://mustache.github.io/mustache.5.html">Mustache Manual</a>. For more complex transformations, you can use <a href="https://stedolan.github.io/jq/#:~:text=jq">JQ</a>. A helpful website for converting JSON&#160;to JQ is <a href="https://jqplay.org/">jq play</a>.</div>
                                        <h4>Sample Incident payload template</h4>
                                        <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                            <div class="codeSnippetCaption">
                                                <p>JSON Template</p>
                                            </div>
                                            <div style="mc-code-lang: PlainText;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="True"><pre><span class="codeSnippetLineNumbers" style="border-right: #AAA 2px solid;" aria-hidden="true">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</span><code>{<br />&#160;&#160;"account_id": "{{accountId}}",<br />&#160;&#160;"customer_name": "{{customer}}",<br />&#160;&#160;"deployment_name": "{{assets.al__deployment}}",<br />&#160;&#160;"short_incident_id": "{{humanFriendlyId}}",<br />&#160;&#160;"long_incident_id": "{{incidentId}}",<br />&#160;&#160;"summary": "{{summary}}",<br />&#160;&#160;"description": "{{incident.description}}",<br />&#160;&#160;"recommendations": "{{incident.recommendations}}",<br />&#160;&#160;"attacker": "{{attacker.value}}",<br />&#160;&#160;"victim": "{{victim.value}}",<br />&#160;&#160;"timestamp": "{{createtime_str}}",<br />&#160;&#160;"threat_rating": "{{incident_threat_rating}}",<br />&#160;&#160;"incident_class": "{{incident_class}}",<br />&#160;&#160;"status": "{{customer_status.status}}"<br />}</code></pre>
                                            </div>
                                        </div>
                                        <h4>Sample Observation payload template</h4>
                                        <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                            <div class="codeSnippetCaption">
                                                <p>JSON Template</p>
                                            </div>
                                            <div style="mc-code-lang: PlainText;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="True"><pre><span class="codeSnippetLineNumbers" style="border-right: #AAA 2px solid;" aria-hidden="true">1
2
3
4
5
6
7
8
9
10
</span><code>{<br />&#160;&#160;"account_id": "{{id.account}}",<br />&#160;&#160;"summary": "{{fields.summary}}",<br />&#160;&#160;"description": "{{fields.desc}}",<br />&#160;&#160;"severity": "{{fields.severity}}",<br />&#160;&#160;"class": "{{fields.class}}",<br />&#160;&#160;"subclass": "{{fields.subclass}}",<br />&#160;&#160;"recommendations": "{{fields.recommendations}}",<br />&#160;&#160;"message": "{{fields.keys.message}}"<br />}</code></pre>
                                            </div>
                                        </div>
                                        <h2>Create the universal webhook connector from the <span class="mc-variable ALVariables.ALUI_1 variable">Alert Logic console</span><a name="Createtheuniversalwebhookconnector"></a></h2>
                                        <p>After you gather the information required by your third-party application and configure the payload template, the next step is to create a universal webhook in the <span class="mc-variable ALVariables.ALUI_1 variable">Alert Logic console</span>  and test the payload. </p>
                                        <p>If your application does not require information such as the custom headers or Authorization header, leave the field blank.</p>
                                        <p><b>To add a universal webhook connector</b>:</p>
                                        <ol>
                                            <li value="1">In the <span class="mc-variable ALVariables.ALUI_1 variable">Alert Logic console</span>, click the navigation menu icon (<img src="../../../../Resources/Images/dashboard/menu-icon.png" style="vertical-align: bottom;" />), click <img src="../../../../Resources/Images/dashboard/configure-icon.png" style="vertical-align: bottom;" /><b>Configure</b>, and then click <b>Connectors</b>.</li>
                                            <li value="2">On the Connectors page, click the add icon (<img src="../../../../Resources/Images/Icons/cdAddPlus.png" style="vertical-align: text-bottom;" />), and then click <b>Webhook</b>. </li>
                                            <li value="3">On the Create a Webhook Connector page, type a descriptive name for the webhook connector<span style="font-family: 'Microsoft Sans Serif'">—</span>for example, "<i>My Third-Party Application</i> Webhook Connector for Incidents."</li>
                                            <li value="4">Enter the target URL that you noted previously.</li>
                                            <li value="5">If your application requires one or more custom headers, enter each header that you noted previously on a separate line. </li>
                                            <li value="6">If your application requires an HTTP Authorization request header, paste it in the <b>Authorization Header</b> field.</li>
                                            <li value="7">Choose a <b>Payload Type</b>, which is the type of <span class="mc-variable ALVariables.Company variable">Alert Logic</span> security information that you want to send: <b>Incident</b>, <b>Observation</b> (of a log correlation), <b>Scheduled Report Notification</b>.</li>
                                            <li value="8">Choose the format of the payload template you customized:&#160;<b>JSON</b>  or <b>JQ</b>.</li>
                                            <li value="9">Enter the payload template that you customized.</li>
                                            <div class="note">A red bar next to a line indicates a syntax error. Code with errors is underlined with a jagged red line. You can hover the pointer over the underlined code to view a tip about the error.</div>
                                            <li value="10">Click <b>TEST</b> to send a test webhook request to the target URL provided. For more information, see <a href="#Connectortestresults" class="MCXref xref">Connector test results</a>.</li>
                                            <li value="11">If your webhook connector sent the test event to the target URL successfully, click <b>SAVE</b>.</li>
                                        </ol>
                                        <h3>Connector test results<a name="Connectortestresults"></a></h3>
                                        <p> If you receive a message that the connector was successfully tested, <span class="mc-variable ALVariables.Company variable">Alert Logic</span> sends the payload template you configured and populates the notification or ticket with sample data. Check your third-party application to ensure the results are expected, and adjust the payload template if necessary.</p>
                                        <p>If the test is unsuccessful, <span class="mc-variable ALVariables.Company variable">Alert Logic</span> displays an error message. For server response errors, you can use the error code and message that <span class="mc-variable ALVariables.Company variable">Alert Logic</span> passes through to troubleshoot the issue. <span class="mc-variable ALVariables.Company variable">Alert Logic</span> also informs you if your JSON&#160;or JQ payload template contains syntax errors.</p>
                                        <h2>Subscribe your webhook to receive notifications<a name="Subscribeyourwebhooktoreceivenotifications"></a> </h2>
                                        <p>After you test and save the connector configuration, the last step is to set up your notification criteria and subscribe the webhook. </p>
                                        <p>You can set up and manage a notification of any type directly from the Notifications page. For more information, see <a href="../../../../configure/notifications/manage.htm" class="MCXref xref">Manage Notifications</a>. You can create notifications from other pages according to notification type:</p>
                                        <ul>
                                            <li>For incidents, you can also create a notification from the Incidents page. For more information, see <a href="../../../../configure/notifications/incident.htm" class="MCXref xref">Incident Notifications</a>.</li>
                                            <li>For observations, you can also create a notification   from the Search page (Log Search tab or Correlations tab) during the process of creating the correlation or by editing an existing correlation listed on the Correlations tab. For more information, see <a href="../../../../configure/notifications/log-correlation.htm" class="MCXref xref">Correlations and Notifications</a> and <a href="../../../../configure/notifications/observation.htm" class="MCXref xref">Observation Notifications</a>.</li>
                                            <li>For health exposures, you can also create a notification from the Health page. For more information, see <a href="../../../../configure/notifications/health.htm" class="MCXref xref"> Health Notifications</a>.</li>
                                            <li>For scheduled reports, you can also schedule the report and subscribe notification recipients from the Reports page. For more information, see <a href="../../../../configure/notifications/report.htm" class="MCXref xref">Scheduled Reports and Notifications</a>.</li>
                                            <li data-mc-conditions="Primary.Draft Content">For scheduled <span class="mc-variable ALVariables.FIM_1 variable">File Integrity Monitoring (FIM)</span> searches, you can schedule a search and subscribe notification recipients from the Notifications page. For more information, see <a href="../../../../configure/notifications/fim-search.htm" class="MCXref xref">File Integrity Monitoring Search Notification</a>.</li>
                                        </ul>
                                        <h2>Manage your webhook connectors</h2>
                                        <p>You can view the list of webhook connectors and edit or delete an existing one. For more information, see <a href="manage-connectors.htm" class="MCXref xref">Manage Connectors</a>.</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>