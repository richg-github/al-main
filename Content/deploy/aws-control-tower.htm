<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Side_Navigation_Skin" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../" data-mc-has-content-body="True" data-mc-toc-path="Deploy|Amazon Web Services" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta name="zd-site-verification" content="9muqcovj07pyvoduai2al" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="1545x1545" href="../../Skins/Favicons/AlertLogic_Logo_2C_RGB_V_Standard.png" />
        <link rel="shortcut icon" href="../../Skins/Favicons/favicon.png" />
        <link rel="icon" sizes="96x96" href="../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../Skins/Favicons/favicon-16x16.png" /><title>Deployment with AWS Control Tower</title>
        <meta http-equiv="Cache-control" content="no-cache" />
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <style>@import url('https://dl.dropboxusercontent.com/s/q5nt7ghnm4mfv88/override-main.css');

</style>
        <link href="../Resources/Stylesheets/MainStyles.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.next-topic-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.separator-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.print-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.expand-all-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.needs-pie
{
	behavior: url('../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link rel="apple-touch-icon" sizes="1545x1545" href="../../Skins/Favicons/AlertLogic_Logo_2C_RGB_V_Standard.png" />
        <link rel="shortcut icon" href="../../Skins/Favicons/favicon.png" />
        <link rel="icon" sizes="96x96" href="../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 1279px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../home.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <div class="buttons popup-container clearfix topicToolbarProxy _Skins_Toolbar mc-component nocontent" style="mc-topic-toolbar-items: ;">
                                        <div class="button-group-container-left">
                                            <button class="button needs-pie previous-topic-button" title="Navigate previous" disabled="true">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Navigate previous">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                            <button class="button needs-pie next-topic-button" title="Navigate next" disabled="true">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Navigate next">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                            <div class="button-separator">
                                            </div>
                                            <button class="button needs-pie print-button" title="Print">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Print">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                            <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                        </div>
                                    </div>
                                    <div class="nocontent">
                                        <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                        </div>
                                    </div>
                                    <div role="main" id="mc-main-content">
                                        <h1>Deployment with <span class="mc-variable ALVariables.AWS variable">AWS</span> Control Tower</h1>
                                        <p>Customers who use <span class="mc-variable ALVariables.AWS variable">AWS</span> Control Tower and <span class="mc-variable ALVariables.Company variable">Alert Logic</span> can get automatic protection of existing and newly enrolled accounts through a series of automations.</p>
                                        <h2>Architecture</h2>
                                        <p>The <span class="mc-variable ALVariables.Company variable">Alert Logic</span> Control Tower Automation uses the following AWS Services to enable automatic protection of newly added AWS Accounts:</p>
                                        <ul>
                                            <li>Amazon EventBridge</li>
                                            <li><span class="mc-variable ALVariables.AWS variable">AWS</span>&#160;CloudFormation</li>
                                            <li><span class="mc-variable ALVariables.AWS variable">AWS</span>&#160;Lambda</li>
                                            <li>Cross-account IAM Roles</li>
                                            <li>AWS&#160;Secrets Manager</li>
                                            <li>Amazon SNS</li>
                                            <li>Amazon SQS</li>
                                        </ul>
                                        <img src="../Resources/Images/control-tower-arch.png" />
                                        <p>Accounts shown in the architecture diagram:</p>
                                        <ul>
                                            <li>Control Tower Account—Master account on which <span class="mc-variable ALVariables.AWS variable">AWS</span>&#160;Control Tower was enabled</li>
                                            <li>Log Archive Account—Account for centralized repository of logs, including CloudTrail logs</li>
                                            <li>Audit Account—Restricted account with read/write access to all accounts. A centralized CloudTrail SNS Topic for security and CloudTrail notification islocated here.</li>
                                            <li>Security Account—An account where <span class="mc-variable ALVariables.Company variable">Alert Logic</span> Control Tower Automation Orchestration is deployed</li>
                                            <li>Linked Account—One or more <span class="mc-variable ALVariables.AWS variable">AWS</span>&#160;accounts protected by <span class="mc-variable ALVariables.Company variable">Alert Logic</span>. <span class="mc-variable ALVariables.Company variable">Alert Logic</span> deploys appliances and agents into this account.</li>
                                        </ul>
                                        <p>The following steps are associated with the numbers indicated in the architecture diagram.</p>
                                        <ol>
                                            <li value="1">When a new Linked account is enrolled into <span class="mc-variable ALVariables.AWS variable">AWS</span> Control Tower, the <kbd>LifeCycle</kbd> lambda function receives a notification from <span class="mc-variable ALVariables.AWS variable">AWS</span> Control Tower and deploys an <kbd>AlertLogic-CT</kbd> StackSet Instance to the new Linked account.</li>
                                            <li value="2">In the new Linked account, <kbd>AlertLogic-CT</kbd> StackSet Instance creates an IAM Role to enable <span class="mc-variable ALVariables.Company variable">Alert Logic</span> Asset Discovery. Upon completion, the StackSet Instance  sends an SNS event via Custom Resource to the Security account to notify that a new deployment must be registered with <span class="mc-variable ALVariables.Company variable">Alert Logic</span>.</li>
                                            <li value="3">In the Security account, a lambda function named <kbd>Register</kbd> is subscribed to the <kbd>ALHubTopic</kbd> SNS topic to receive new deployment registration requests from the new Linked account. Once the function receives a notification request, it registers a new linked account deployment with <span class="mc-variable ALVariables.Company variable">Alert Logic</span>.</li>
                                            <li value="4">When a user in the new Linked account tags or untags any VPCs with the "al," "alertlogic," "tm," or "threatmanager" keys, an event is published to Amazon EventBridge.</li>
                                            <li value="5">A lambda function named <kbd>Deploy</kbd> receives the event and updates deployment protection scope in the <span class="mc-variable ALVariables.ALUI variable">Alert Logic console</span> accordingly.</li>
                                            <li value="6">If you specified Automatic mode during the initial setup, <span class="mc-variable ALVariables.Company variable">Alert Logic</span> creates a security subnet in a newly protected VPC and deploys <span class="mc-variable ALVariables.Company variable">Alert Logic</span> appliances. If you chose Manual mode, you must deploy the appliances to protect newly added VPCs. To learn more about deployment modes, see <a href="../get-started/about-deployment-types.htm" class="MCXref xref">About  Deployment Types</a>.</li>
                                        </ol>
                                        <p>Deployment begins with a CloudFormation stack deployed in the AWS Control Tower Master account. The stack creates two AWS Lambda Functions, two AWS CloudFormation StackSets, and an AWS CloudWatch Event Rule for AWS Control Tower Lifecycle. <kbd>Onboarding</kbd> Lambdas are used during initial deployment to orchestrate an <kbd>AlertLogic-CT</kbd> StackSet Instance, create an SQS in the Log archive account, and SQS to SNS subscription in the Audit account. <kbd>Onboarding</kbd> Lambda also orchestrates <kbd>AlertLogic-CT-Central-IAM-Role</kbd> stackset (not shown in the diagram) to create a StackSet Instance  in the Log Archive account for CloudTrail ingestion. The CloudWatch Event Rule triggers the <kbd>Lifecycle</kbd> Lambda   during new AWS account setup. This Lambda deploys <kbd>AlertLogic-CT</kbd> StackSets to the new AWS account.</p>
                                        <p>The <kbd>AlertLogic-CT</kbd> StackSet launches stackset instances in all AWS accounts included in the scope of deployment. In each account, this stackset creates an IAM role for <span class="mc-variable ALVariables.Company variable">Alert Logic</span> and a CloudWatch Event rule for detecting tag changes on VPC.  The <kbd>AlertLogic-CT</kbd> stackset create additional resources in the Security Account, including an Amazon SNS Topic,  two AWS Lambda Functions, and an Amazon EventBridge Event bus.</p>
                                        <h2>Prerequisites</h2>
                                        <p>You do not need to enable any additional resources other than the ones enabled by AWS Control Tower. </p>
                                        <p>You do not need to increase any limits, but note that the automation solution creates an EventBridge in a security account to capture tag updates in linked accounts.</p>
                                        <p>Before you implement this solution, <span class="mc-variable ALVariables.Company variable">Alert Logic</span>&#160;recommends that you become familiar with <span class="mc-variable ALVariables.AWS variable">AWS</span> CloudFormation, <span class="mc-variable ALVariables.AWS variable">AWS</span>&#160;Lambda, <span class="mc-variable ALVariables.AWS variable">AWS</span>&#160;CloudTrail, and Amazon EventBridge services:</p>
                                        <ul>
                                            <li>If you are new to <span class="mc-variable ALVariables.AWS variable">AWS</span>, see <a href="https://aws.amazon.com/getting-started/">Getting Started with AWS</a>.</li>
                                            <li>For additional information on <span class="mc-variable ALVariables.AWS variable">AWS</span>Marketplace, see <a href="https://aws.amazon.com/marketplace/help/about-us?ref_=footer_nav_about_aws_marketplace">this documentation on AWS Marketplace</a>.</li>
                                            <li>To get started with Control Tower, see the <a href="https://docs.aws.amazon.com/controltower/latest/userguide/getting-started-with-control-tower.html">AWS documentation on Control Tower</a>.</li>
                                        </ul>
                                        <h2>Deployment and Configuration</h2>
                                        <h3>Subscribe to <span class="mc-variable ALVariables.Company variable">Alert Logic</span> <span class="mc-variable ALVariables.SIEMless variable">Managed Detection and Response</span> on the AWS Marketplace</h3>
                                        <ol>
                                            <li value="1">
                                                <p>Locate <span class="mc-variable ALVariables.Company variable">Alert Logic</span> <span class="mc-variable ALVariables.SIEMless variable">Managed Detection and Response</span> in the AWS Marketplace </p>
                                                <ul>
                                                    <li><a href="https://aws.amazon.com/marketplace/pp/B07K2J16QH?ref_=beagle"><span class="mc-variable ALVariables.Company variable">Alert Logic</span> <span class="mc-variable ALVariables.SIEMless variable">Managed Detection and Response</span> (US)</a>
                                                    </li>
                                                    <li><a href="https://aws.amazon.com/marketplace/pp/B07KJMQN6X?ref_=beagle"><span class="mc-variable ALVariables.Company variable">Alert Logic</span> <span class="mc-variable ALVariables.SIEMless variable">Managed Detection and Response</span> (UK)</a>
                                                    </li>
                                                    <li><a href="https://aws.amazon.com/marketplace/pp/B07S64BX2Q?ref_=beagle"><span class="mc-variable ALVariables.Company variable">Alert Logic</span> <span class="mc-variable ALVariables.SIEMless variable">Managed Detection and Response</span> Professional - SaaS Contract (US)</a>
                                                    </li>
                                                    <li><a href="https://aws.amazon.com/marketplace/pp/B07SB6P6N7?ref_=beagle"><span class="mc-variable ALVariables.Company variable">Alert Logic</span> <span class="mc-variable ALVariables.SIEMless variable">Managed Detection and Response</span> Professional - SaaS Contract (UK)</a>).</li>
                                                </ul>
                                            </li>
                                            <li value="2">Click <b>Continue to Subscribe</b>.</li>
                                            <li value="3">Next, configure your contract. You can set the <b>Contract Duration</b> and <b>Renewal Settings</b>.</li>
                                            <li value="4">Select the <b>Contract Options</b> to be activated with your contract.</li>
                                            <li value="5">When you configure your contract, click <b>Create contract</b>.</li>
                                            <li value="6">You will be prompted to confirm the contract. If you agree to the pricing, click <b>Pay Now</b>.</li>
                                            <li value="7">Check your email for the validation email from <span class="mc-variable ALVariables.Company variable">Alert Logic</span>. After you confirm receipt, <span class="mc-variable ALVariables.Company variable">Alert Logic</span> sends another email to enable password reset and grant you access to the <span class="mc-variable ALVariables.ALUI variable">Alert Logic console</span>.</li>
                                            <li value="8">Log into the <a href="https://console.account.alertlogic.com/#/login" title="Alert Logic console" alt="Alert Logic console"><span class="mc-variable ALVariables.ALUI variable">Alert Logic console</span></a>.</li>
                                        </ol>
                                        <h3>Log into the Partner UI
				</h3>
                                        <ol>
                                            <li value="1">Create  an access key and a secret key in the <span class="mc-variable ALVariables.ALUI variable">Alert Logic console</span>. For more information about how to create an access key and secret key, see <a href="https://docs.alertlogic.com/prepare/access-key-management.htm" title="Create and Manage Alert Logic Access Keys" alt="Create and Manage Alert Logic Access Keys">Create and Manage <span class="mc-variable ALVariables.Company variable">Alert Logic</span> Access Keys</a>.</li>
                                            <li value="2">Download the code from <kbd>&lt;partner-github-repository&gt;</kbd>.</li>
                                            <li value="3">Log into the <kbd>&lt;MASTER|LOG|XXX&gt;</kbd> account in AWS Control Tower as <kbd>&lt;Permissions&gt;</kbd>.</li>
                                            <li value="4">To deploy the solution, create a new CloudFormation Stack using <a href="https://s3.amazonaws.com/alertlogic-public-repo.us-east-1/templates/ct-al-master-onboarding.yaml">this template</a>.</li>
                                            <li value="5">
                                                <p>Provide the following information to deploy the CloudFormation Stack:</p>
                                                <ul>
                                                    <li><span class="mc-variable ALVariables.Company variable">Alert Logic</span> API Access Key and <span class="mc-variable ALVariables.Company variable">Alert Logic</span> API Secret Key</li>
                                                    <li><span class="mc-variable ALVariables.Company variable">Alert Logic</span> Customer ID –  On the Support page in the <span class="mc-variable ALVariables.ALUI variable">Alert Logic console</span></li>
                                                    <li>Control Tower Audit Account ID – Control Tower AWS audit account</li>
                                                    <li>LogArchiveAccount  Control Tower  account</li>
                                                    <li>SecurityAccount – Designated <span class="mc-variable ALVariables.AWS variable">AWS</span>&#160;security account</li>
                                                    <li>TargetRegion – List of regions to enable <span class="mc-variable ALVariables.Company variable">Alert Logic</span> <span class="mc-variable ALVariables.SIEMless variable">Managed Detection and Response</span> deployment into</li>
                                                </ul>
                                            </li>
                                        </ol>
                                        <h3>Verify linked accounts</h3>
                                        <p>After you complete the CloudFormation deployment, you can see your linked accounts listed as deployments in the <span class="mc-variable ALVariables.ALUI variable">Alert Logic console</span>.</p>
                                        <h3>Validate that the solution is properly deployed</h3>
                                        <p>The <span class="mc-variable ALVariables.Company variable">Alert Logic</span> appliance deploys automatically within 15 minutes to the linked accounts.</p>
                                        <p>Next, you must install  <span class="mc-variable ALVariables.Company variable">Alert Logic</span> <span class="mc-variable ALVariables.SIEMless variable">Managed Detection and Response</span> Agents on the protected hosts. Follow these instructions to deploy <span class="mc-variable ALVariables.Company variable">Alert Logic</span> <span class="mc-variable ALVariables.SIEMless variable">Managed Detection and Response</span> Agents for <a href="../prepare/alert-logic-agent-linux.htm">Linux</a> or <a href="../prepare/alert-logic-agent-windows.htm">Windows</a>.</p>
                                        <div class="note" data-mc-conditions="Primary.includeDev"> If you have <span class="mc-variable ALVariables.AWS_1 variable">Amazon Web Services (AWS)</span> Systems Manager managed instances, you can use <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/distributor.html"><span class="mc-variable ALVariables.AWS variable">AWS</span> Systems Manager Distributor</a>     to install the  <span class="mc-variable ALVariables.AgentName variable">Alert Logic agent</span> on the instances instead of installing the agent on each host manually. For more information, see <a href="../prepare/agent-install-automated-aws.htm" class="MCXref xref">Automate Alert Logic Agent Installation with AWS Systems Manager Distributor</a>.</div>
                                        <p><span class="mc-variable ALVariables.Company variable">Alert Logic</span> automatically claims the agents and assigns them to the appliances.</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>