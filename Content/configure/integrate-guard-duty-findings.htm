<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Side_Navigation_Skin" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../" data-mc-has-content-body="True" data-mc-toc-path="Configure" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta name="zd-site-verification" content="9muqcovj07pyvoduai2al" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../Skins/Favicons/browserconfig.xml" />
        <meta name="description" content="Learn how to integrate Amazon GuardDuty Findings as threats in the Alert Logic Incidents page, using a CloudFormation template that deploys CloudWatch Events collector." />
        <link rel="apple-touch-icon" sizes="1545x1545" href="../../Skins/Favicons/AlertLogic_Logo_2C_RGB_V_Standard.png" />
        <link rel="shortcut icon" href="../../Skins/Favicons/favicon.png" />
        <link rel="icon" sizes="96x96" href="../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../Skins/Favicons/favicon-16x16.png" /><title>Integrate Amazon GuardDuty Findings into Alert Logic Incidents</title>
        <meta http-equiv="Cache-control" content="no-cache" />
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <style>@import url('https://richg-github.github.io/al-styles/override-main.css');

</style>
        <link href="../Resources/Stylesheets/MainStyles.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.next-topic-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.separator-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.print-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.expand-all-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.needs-pie
{
	behavior: url('../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link rel="apple-touch-icon" sizes="1545x1545" href="../../Skins/Favicons/AlertLogic_Logo_2C_RGB_V_Standard.png" />
        <link rel="shortcut icon" href="../../Skins/Favicons/favicon.png" />
        <link rel="icon" sizes="96x96" href="../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 1279px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../home.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <div class="buttons popup-container clearfix topicToolbarProxy _Skins_Toolbar mc-component nocontent" style="mc-topic-toolbar-items: ;">
                                        <div class="button-group-container-left">
                                            <button class="button needs-pie previous-topic-button" title="Navigate previous" disabled="true">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Navigate previous">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                            <button class="button needs-pie next-topic-button" title="Navigate next" disabled="true">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Navigate next">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                            <div class="button-separator">
                                            </div>
                                            <button class="button needs-pie print-button" title="Print">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Print">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                            <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                        </div>
                                    </div>
                                    <div class="nocontent">
                                        <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                        </div>
                                    </div>
                                    <div role="main" id="mc-main-content">
                                        <h1><a name="integrate-gd-findings"></a>Integrate <span class="mc-variable ALVariables.GuardDuty_1 variable">Amazon GuardDuty</span> Findings into <span class="mc-variable ALVariables.Company variable">Alert Logic</span> Incidents</h1>
                                        <div id="microcontent1">
                                            <p><span class="mc-variable ALVariables.GuardDuty_1 variable">Amazon GuardDuty</span> is a continuous security monitoring service that requires no customer-managed hardware or software. <span class="mc-variable ALVariables.GuardDuty_2 variable">GuardDuty</span> analyzes and processes VPC Flow Logs and <span class="mc-variable ALVariables.AWS variable">AWS</span> CloudTrail event logs. <span class="mc-variable ALVariables.GuardDuty_2 variable">GuardDuty</span> uses security logic and <span class="mc-variable ALVariables.AWS variable">AWS</span> usage statistics techniques to identify unexpected and potentially unauthorized and malicious activity, like escalations of privileges, uses of exposed credentials, or communication with malicious IPs, URLs, or domains.</p>
                                            <p><span class="mc-variable ALVariables.Company variable">Alert Logic</span> provides a CloudFormation template that deploys a CloudWatch Events collector and a Lambda function that integrates <span class="mc-variable ALVariables.GuardDuty_2 variable">GuardDuty</span> findings into the <span class="mc-variable ALVariables.ALUI_1 variable">Alert Logic console</span> for display as threats on the Incidents page. </p>
                                        </div>
                                        <h2><a name="before-you-begin"></a>Before you begin</h2>
                                        <p>Before you perform the procedures required to integrate <span class="mc-variable ALVariables.GuardDuty_2 variable">GuardDuty</span> findings into the Incidents page, ensure you have the proper permissions to do so and the correct command line interfaces to generate access keys. </p>
                                        <h3><a name="verify-permissions"></a>Verify administrative permissions</h3>
                                        <p>To perform the procedures necessary to integrate <span class="mc-variable ALVariables.GuardDuty_2 variable">GuardDuty</span> findings into the Incidents page, your <span class="mc-variable ALVariables.Company variable">Alert Logic</span> user account and your <span class="mc-variable ALVariables.AWS variable">AWS</span> account must have administrative permissions. </p>
                                        <p><b>To verify your</b> <span style="font-weight: bold;" class="mc-variable ALVariables.Company variable">Alert Logic</span> <b>permissions:</b></p>
                                        <ol>
                                            <li value="1">Log in to the <span class="mc-variable ALVariables.ALUI_1 variable">Alert Logic console</span>.</li>
                                            <li value="2">Click the menu icon (<img src="../Resources/Images/dashboard/menu-icon.png" style="vertical-align: bottom;" />) to see the navigation menu.</li>
                                            <li value="3">Click the <img src="../Resources/Images/dashboard/manage-icon.png" style="vertical-align: bottom;" /><span style="font-weight: bold;">Manage</span> menu item, and then select <b>Users</b>.</li>
                                            <li value="4">At the top of the list of users, select your user name.</li>
                                            <li value="5">In the <b>Account Details</b> panel, verify the selected user role is <b>Administrator</b>.</li>
                                        </ol>
                                        <p><b>To verify your </b><span style="font-weight: bold;" class="mc-variable ALVariables.AWS variable">AWS</span><b> permissions:</b>
                                        </p>
                                        <ol>
                                            <li value="1">Log in to the <span class="mc-variable ALVariables.AWS variable">AWS</span> console.</li>
                                            <li value="2">Click <b>IAM</b>, under <b>Security, Identity &amp; Compliance</b>.
            </li>
                                            <li value="3">Ensure "AdministratorAccess" appears as one of the policies in the list of policy names.
            </li>
                                        </ol>
                                        <h3><a name="cli"></a>Ensure access to a command line interface (CLI) </h3>
                                        <p><span class="mc-variable ALVariables.GuardDuty_2 variable">GuardDuty</span> integration with <span class="mc-variable ALVariables.Company variable">Alert Logic</span> requires you use a command line interface (CLI) appropriate to your operating system to generate the access keys and secret keys required to allow <span class="mc-variable ALVariables.Company variable">Alert Logic</span> to issue API&#160;calls on your behalf. You need the following CLI, depending on your operating system:</p>
                                        <ul>
                                            <li>Microsoft Windows requires <a href="https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell" target="_blank" title="PowerShell 3.0 or later" alt="PowerShell 3.0 or later">PowerShell 3.0 or later</a>. </li>
                                            <li>Unix and Linux require <a href="https://curl.haxx.se/cURL" target="_blank" title="cURL" alt="cURL">cURL</a> and <a href="https://stedolan.github.io/jq/" target="_blank" title="jq" alt="jq">jq</a>. </li>
                                        </ul>
                                        <h3><a name="enable-guard-duty"></a>Enable <span class="mc-variable ALVariables.GuardDuty_1 variable">Amazon GuardDuty</span></h3>
                                        <p>Before you can integrate <span class="mc-variable ALVariables.GuardDuty_2 variable">GuardDuty</span> findings into the Incidents page, you must log in to <span class="mc-variable ALVariables.AWS variable">AWS</span> and enable <span class="mc-variable ALVariables.GuardDuty_2 variable">GuardDuty</span>. For more information, see  <a href="https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_settingup.html">Setting Up Amazon GuardDuty</a>.</p>
                                        <h2><a name="create-al-access-key"></a>Create an <span class="mc-variable ALVariables.Company variable">Alert Logic</span> access key and secret key</h2>
                                        <p>To support <span class="mc-variable ALVariables.GuardDuty_2 variable">GuardDuty</span> integration, <span class="mc-variable ALVariables.Company variable">Alert Logic</span> uses your customer identification, in the form of access keys and secret keys, to issue API&#160;calls on your behalf. You need these keys to launch a CloudFormation template that deploys a CloudWatch Events collector and a Lambda function that integrates <span class="mc-variable ALVariables.GuardDuty_2 variable">GuardDuty</span> findings into the <span class="mc-variable ALVariables.Company variable">Alert Logic</span> system for display as threats on the Incidents page. </p>
                                        <p>You can create an access key through the <span class="mc-variable ALVariables.ALUI_1 variable">Alert Logic console</span>, or by using a Unix or Linux bash command line. For more information about access key creation in the <span class="mc-variable ALVariables.ALUI_1 variable">Alert Logic console</span>,  see <a href="../prepare/access-key-management.htm" target="_blank" title="Access Key Management" alt="Access Key Management" class="MCXref xref">Create and Manage Alert Logic Access Keys </a>.</p>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../../Skins/Default/Stylesheets/Images/transparent.gif" height="16" width="18" alt="Closed" data-mc-alt2="Open" /><b>To create an access key and a secret key through the Unix or Linux bash command line:</b></a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>1. From the bash command line, type the following command, where <kbd>&lt;email address&gt;</kbd> is your <span class="mc-variable ALVariables.Company variable">Alert Logic</span> user name.</p>
                                                <p><kbd>export AL_USERNAME='&lt;email address&gt;'</kbd>
                                                </p>
                                                <p>2. Copy, and then paste, the following command into the command line: </p>
                                                <p><kbd>auth=$(curl -X POST -s -u $AL_USERNAME https://api.global-services.global.alertlogic.com/aims/v1/authenticate); export AL_ERROR=$(echo $auth | jq -r '.error // ""'); export AL_ACCOUNT_ID=$(echo $auth | jq -r '.authentication.account.id'); export AL_USER_ID=$(echo $auth | jq -r '.authentication.user.id'); export AL_TOKEN=$(echo $auth | jq -r '.authentication.token'); if [ -n "$AL_ERROR" -o -z "$AL_TOKEN" ]; then echo "Authentication failure - $AL_ERROR "; else roles=$(curl -s -X GET -H "x-aims-auth-token: $AL_TOKEN" https://api.global-services.global.alertlogic.com/aims/v1/$AL_ACCOUNT_ID/users/$AL_USER_ID/roles | jq -r '.roles[].name'); if [ "$roles" != "Administrator" ]; then echo "The $AL_USERNAME doesn’t have Administrator role. Assigned role is '$roles'"; else curl -s -X POST -H "x-aims-auth-token: $AL_TOKEN" https://api.global-services.global.alertlogic.com/aims/v1/$AL_ACCOUNT_ID/users/$AL_USER_ID/access_keys | jq .; fi; fi; unset AL_USERNAME;</kbd>
                                                </p>
                                                <p>3. When prompted, enter your <span class="mc-variable ALVariables.Company variable">Alert Logic</span> user account password.</p>
                                                <div class="example">Successful response example:<br /><kbd>{<br></br> "access_key_id": "712c0b413eef41f6",<br></br> "secret_key": "1234567890b3eea8880d292fb31aa96902242a076d3d0e320cc036eb51bf25ad"<br></br>}</kbd><br /></div>
                                                <p>Note the  <kbd>access_key_id</kbd> and <kbd>secret_key</kbd> values, which you need to deploy the CloudFormation template to your <span class="mc-variable ALVariables.AWS variable">AWS</span> account.</p>
                                                <div data-mc-conditions="Primary.Draft Content">
                                                    <h3>Necessary role error</h3>
                                                    <p>If the command returns an error about not having the necessary role, verify that your <span class="mc-variable ALVariables.Company variable">Alert Logic</span> account has administrator permissions. For more information about AIMS APIs, see the <a href="https://console.account.alertlogic.com/users/api/aims/"><span class="mc-variable ALVariables.Company variable">Alert Logic</span> AIMS Account Resources</a>.</p>
                                                    <h3>Limit exceeded error</h3>
                                                    <p>Each user can create only five access keys. If a limit exceeded error appears, you must delete one or more access keys before you can create new keys.</p>
                                                    <ol>
                                                        <li value="1">Type the following command to list access keys:
                    <pre>curl -s -X GET -H "x-aims-auth-token: $AL_TOKEN" https://api.global-services.global.alertlogic.com/aims/v1/$AL_ACCOUNT_ID/users/$AL_USER_ID/access_keys | jq</pre></li>
                                                        <li value="2">Use the selected <kbd>access_key_id </kbd>in the following command to delete the key:
                    <pre>curl -X DELETE -H "x-aims-auth-token: $AL_TOKEN" https://api.global-services.global.alertlogic.com/aims/v1/$AL_ACCOUNT_I</pre></li>
                                                    </ol>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../../Skins/Default/Stylesheets/Images/transparent.gif" height="16" width="18" alt="Closed" data-mc-alt2="Open" /><b>To create an access key and a secret key through Windows PowerShell:</b></a></span>
                                            <div class="MCDropDownBody dropDownBody">
                                                <p>1. In the Windows PowerShell console, copy and paste the following command:</p>
                                                <p><kbd>[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $creds = Get-Credential -Message "Please enter your Alert Logic Cloud Insight email address and password"; $unsecureCreds = $creds.GetNetworkCredential(); $base64AuthInfo = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes(("{0}:{1}" -f $unsecureCreds.UserName,$unsecureCreds.Password))); Remove-Variable unsecureCreds; $AUTH = Invoke-RestMethod -Method Post -Headers @{"Authorization"=("Basic {0}" -f $base64AuthInfo)} -Uri https://api.global-services.global.alertlogic.com/aims/v1/authenticate ; Remove-Variable base64AuthInfo; $AL_ACCOUNT_ID = $AUTH.authentication.account.id; $AL_USER_ID = $AUTH.authentication.user.id; $AL_TOKEN = $AUTH.authentication.token; if (!$AL_TOKEN) { Write-Host "Authentication failure"} else { $ROLES_RESP = Invoke-RestMethod -Method Get -Headers @{"x-aims-auth-token"=$AL_TOKEN} -Uri https://api.global-services.global.alertlogic.com/aims/v1/$AL_ACCOUNT_ID/users/$AL_USER_ID/roles ; $ROLES = $ROLES_RESP.roles.name; if ($ROLES -ne "Administrator" ) { Write-Host "Your user doesn’t have Administrator role. Assigned role is '$ROLES'" } else { $ACCESS_KEY = Invoke-RestMethod -Method Post -Headers @{"x-aims-auth-token"=$AL_TOKEN} -Uri https://api.global-services.global.alertlogic.com/aims/v1/$AL_ACCOUNT_ID/users/$AL_USER_ID/access_keys ; Write-Host $ACCESS_KEY } }</kbd>
                                                </p>
                                                <p>2. When prompted, enter your <span class="mc-variable ALVariables.Company variable">Alert Logic</span> user name and password.</p>
                                                <div class="example">Successful response example:<br /><kbd>@{access_key_id=712c0b413eef41f6; secret_key=1234567890b3eea8880d292fb31aa96902242a076d3d0e320cc036eb51bf25ad}</kbd></div>
                                                <p>Note the  <kbd>access_key_id</kbd> and <kbd>secret_key</kbd> values, which you need to deploy the CloudFormation template to your <span class="mc-variable ALVariables.AWS variable">AWS</span> account.</p>
                                                <div data-mc-conditions="Primary.Draft Content">
                                                    <h3>Necessary role error</h3>
                                                    <p>If the command returns an error about not having the necessary role, verify your <span class="mc-variable ALVariables.Company variable">Alert Logic</span> account has administrator permissions. For more information about AIMS APIs, see the <a href="https://console.account.alertlogic.com/users/api/aims/"><span class="mc-variable ALVariables.Company variable">Alert Logic</span> AIMS Account Resources</a>.</p>
                                                    <h3>Limit exceeded error</h3>
                                                    <p>Each user can create only five access keys. If a limit exceeded response appears, you must delete one or more access keys before you can create new keys.</p>
                                                    <ol>
                                                        <li value="1">Type the following command to list access keys:
                        <pre>Invoke-RestMethod -Method Get -Headers @{"x-aims-auth-token"=$AL_TOKEN} -Uri https://api.global-services.global.alertlogic.com/aims/v1/$AL_ACCOUNT_ID/users/$AL_USER_ID/access_keys</pre></li>
                                                        <li value="2">Use the selected <kbd>access_key_id </kbd>in the following command to delete the key:
						<pre>Invoke-RestMethod -Method Delete -Headers @{"x-aims-auth-token"=$AL_TOKEN} -Uri https://api.global-services.global</pre></li>
                                                    </ol>
                                                </div>
                                            </div>
                                        </div>
                                        <h2><a name="launch-cft"></a>Deploy the CloudWatch Events collector from the CloudFormation template</h2>
                                        <p>This CloudFormation template deploys the <span class="mc-variable ALVariables.Company variable">Alert Logic</span> CloudWatch Events collector and Lambda function to a single <span class="mc-variable ALVariables.AWS variable">AWS</span> region for <span class="mc-variable ALVariables.GuardDuty_2 variable">GuardDuty</span> integration. The CloudWatch Events collector collects CloudWatch Events associated with <span class="mc-variable ALVariables.GuardDuty_2 variable">GuardDuty</span> findings, and the Lambda function forwards those events to the <span class="mc-variable ALVariables.ALUI variable">Alert Logic console</span> to display as incidents. </p>
                                        <p>If you want to collect events from multiple <span class="mc-variable ALVariables.AWS variable">AWS</span> regions, you must either install the CloudWatch Events collector in each region from which you want to collect events or set up a <span class="mc-variable ALVariables.GuardDuty_2 variable">GuardDuty</span> Master Account. For more information, see <a href="https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_accounts.html" target="_blank" title="Managing AWS Accounts in Amazon GuardDuty" alt="Managing AWS Accounts in Amazon GuardDuty">Managing AWS Accounts in Amazon GuardDuty</a>. </p>
                                        <h3>Use the <span class="mc-variable ALVariables.AWS variable">AWS</span> console to deploy </h3>
                                        <p style="font-style: normal;"><b>To deploy the CloudWatch Events collector from the CloudFormation template:</b>
                                        </p>
                                        <ol>
                                            <li value="1">Log in to the <a href="http://aws.amazon.com/" target="_blank" title="AWS Console" alt="AWS Console"><span class="mc-variable ALVariables.AWS variable">AWS</span> Console</a> with an <span class="mc-variable ALVariables.AWS variable">AWS</span> account that has <span class="mc-variable ALVariables.AWS variable">AWS</span> administrator privileges.
            </li>
                                            <li value="2">Click the region in which you want to deploy the CloudFormation template.</li>
                                            <li value="3">Click <b>Services</b>, and then click <b>CloudFormation</b>. </li>
                                            <li value="4">Click <b>Create Stack</b>.</li>
                                            <li value="5">Under Choose a template section, select <b>Specify an Amazon S3 template URL</b>, and then enter the following URL:&#160;<kbd>https://s3.amazonaws.com/alertlogic-collectors-us-east-1/cfn/guardduty.template</kbd></li>
                                            <li value="6">Click <b>Next</b>.</li>
                                            <li value="7">In the <b>Specify Details</b> window, provide the following required parameters:<ul><li><b>Stack name</b>—Accept the default, or use any preferred name</li><li><b>AccessKeyId</b>—<kbd>access_key_id</kbd> you created in <a href="#create-al-access-key" class="Bookmark MCXref xref xrefBookmark">Create an Alert Logic access key and secret key</a></li><li><b>AlApiEndpoint</b>—Accept the default (<kbd>api.global-services.global.alertlogic.com</kbd>)</li><li><b>AlDataResidency</b>—Usually <kbd>default</kbd></li><li><b>SecretKey</b>—<kbd>secret_key</kbd> you created in <a href="#create-al-access-key" class="Bookmark MCXref xref xrefBookmark">Create an Alert Logic access key and secret key</a></li></ul></li>
                                            <li value="8">Click <b>Next</b>.</li>
                                            <li value="9">On the <b>Options</b> panel, click <b>Next</b>.</li>
                                            <li value="10">In the <b>Review</b> panel, perform a predeployment check.</li>
                                            <li value="11">Select <b>I acknowledge that AWS CloudFormation might create IAM resources</b>, and then click <b>Create</b>.</li>
                                            <li value="12">On the CloudFormation Stacks panel, filter results based on the stack name you created, and then select your stack.</li>
                                        </ol>
                                        <p>A successful deployment returns a status of <kbd>CREATE_COMPLETE</kbd>. </p>
                                        <div class="note">You must repeat the collector installation procedure for each region in which you want to install the CloudWatch Events collector.</div>
                                        <div class="caution">You may install only one collector in each <span class="mc-variable ALVariables.AWS variable">AWS</span> region. If you try to deploy the template multiple times in the same region, you will receive an error. </div>
                                        <h3>Use the <span class="mc-variable ALVariables.AWS variable">AWS</span> CLI to deploy </h3>
                                        <p>To use the command line to deploy the <span class="mc-variable ALVariables.Company variable">Alert Logic</span> custom template, see the instructions in the <span class="mc-variable ALVariables.Company variable">Alert Logic</span> <a href="https://github.com/alertlogic/cwe-collector/blob/integration/cfn/README-GD.md#use-a-command-line-to-deploy">github readme</a>. </p>
                                        <h2><a name="verify-deployment"></a>Verify the CloudFormation&#160;template launched successfully</h2>
                                        <p>If the CloudFormation template launched successfully, the  Incident List will include recent <span class="mc-variable ALVariables.GuardDuty_2 variable">GuardDuty</span> findings that also appear in the <span class="mc-variable ALVariables.GuardDuty_2 variable">GuardDuty</span> console. </p>
                                        <ol>
                                            <li value="1">Log in to the <span class="mc-variable ALVariables.ALUI variable">Alert Logic console</span> with an account that has administrator permissions.
                <ul><li>Use the <a href="https://console.account.alertlogic.com/#/login">US <span class="mc-variable ALVariables.ALUI_1 variable">Alert Logic console</span></a> for regions in the United States and associated geographical regions.
                </li><li>Use the <a href="https://console.account.alertlogic.co.uk/#/login">UK <span class="mc-variable ALVariables.ALUI_1 variable">Alert Logic console</span></a> for regions in Europe and other regions not in the US.
                </li></ul></li>
                                            <li value="2">Click the navigation menu icon (<img src="../Resources/Images/dashboard/menu-icon.png" style="vertical-align: bottom;" />), click <img src="../Resources/Images/dashboard/respond-icon.png" /><b>Respond</b>, and then click <b>Incidents</b>.</li>
                                            <li value="3">Verify that <span class="mc-variable ALVariables.GuardDuty_2 variable">GuardDuty</span> findings appear as incidents in the Incident List. </li>
                                        </ol>
                                        <h2><a name="troubleshooting"></a>Troubleshooting installation issues</h2>
                                        <h3><span class="mc-variable ALVariables.AWS variable">AWS</span> console troubleshooting</h3>
                                        <p>If installation through the <span class="mc-variable ALVariables.AWS variable">AWS</span> console is not successful, you can see the  detailed error messages in the <span class="mc-variable ALVariables.AWS variable">AWS</span> CloudWatch Log Stream. </p>
                                        <p><b>To access the error messages</b>:</p>
                                        <ol>
                                            <li value="1">Click <b>CloudFormation</b>, and then click <b>Stacks</b>. </li>
                                            <li value="2">Click <b>Stack Detail</b>, and then select your stack name from the list. </li>
                                            <li value="3">Click <b>Logs</b>, and then filter by<kbd> /aws/lambda/my-new-stack</kbd> (where <kbd>my-new-stack</kbd> is the name you gave your stack).</li>
                                        </ol>
                                        <h3><span class="mc-variable ALVariables.AWS variable">AWS</span> CLI troubleshooting</h3>
                                        <p>If installation through the <span class="mc-variable ALVariables.AWS variable">AWS</span> CLI is not successful, issue the following command for more information:</p>
                                        <p><kbd>aws cloudformation describe-stack-events --stack-name my-new-stack</kbd>
                                        </p>
                                        <h3>Lambda function troubleshooting</h3>
                                        <p>If <kbd>GetEndpointsLambdaFunction</kbd> fails, an issue could exist with the <kbd>access_key_id</kbd> or the <kbd>secret_key</kbd> you provided. Be sure the <kbd>access_key_id</kbd> is correct, your <kbd>secret_key</kbd> is valid, and your user account has administrative permissions for the <span class="mc-variable ALVariables.ALUI_1 variable">Alert Logic console</span>.</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>