<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Side_Navigation_Skin" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../../" data-mc-has-content-body="True" data-mc-searchable="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta name="zd-site-verification" content="9muqcovj07pyvoduai2al" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../Skins/Favicons/browserconfig.xml" />
        <meta name="description" content="A ServiceNow connection target securely stores reusable authentication credential and URL path information for integrations with ServiceNow." />
        <link rel="apple-touch-icon" sizes="1545x1545" href="../../../../Skins/Favicons/AlertLogic_Logo_2C_RGB_V_Standard.png" />
        <link rel="shortcut icon" href="../../../../Skins/Favicons/favicon.png" />
        <link rel="icon" sizes="96x96" href="../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../Skins/Favicons/favicon-16x16.png" /><title>Configure ServiceNow Connection Target</title>
        <meta http-equiv="Cache-control" content="no-cache" />
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <style>@import url('https://richg-github.github.io/al-styles/override-main.css');

</style>
        <link href="../../../Resources/Stylesheets/MainStyles.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.next-topic-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.separator-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.print-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.expand-all-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.needs-pie
{
	behavior: url('../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link rel="apple-touch-icon" sizes="1545x1545" href="../../../../Skins/Favicons/AlertLogic_Logo_2C_RGB_V_Standard.png" />
        <link rel="shortcut icon" href="../../../../Skins/Favicons/favicon.png" />
        <link rel="icon" sizes="96x96" href="../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 1279px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../../home.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <div class="buttons popup-container clearfix topicToolbarProxy _Skins_Toolbar mc-component nocontent" style="mc-topic-toolbar-items: ;">
                                        <div class="button-group-container-left">
                                            <button class="button needs-pie previous-topic-button" title="Navigate previous" disabled="true">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Navigate previous">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                            <button class="button needs-pie next-topic-button" title="Navigate next" disabled="true">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Navigate next">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                            <div class="button-separator">
                                            </div>
                                            <button class="button needs-pie print-button" title="Print">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Print">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                            <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                        </div>
                                    </div>
                                    <div role="main" id="mc-main-content">
                                        <h1>Configure ServiceNow Connection Target</h1>
                                        <p>A <span class="mc-variable ALVariables.Connector_Type variable">ServiceNow</span> connection securely stores reusable authentication credential <MadCap:conditionalText data-mc-conditions="SnippetConditions.ExcludedText">and URL path </MadCap:conditionalText>information for integrations with <span class="mc-variable ALVariables.Connector_Type variable">ServiceNow</span>. </p>
                                        <p>Complete the following steps to configure a connection to <span class="mc-variable ALVariables.Connector_Type variable">ServiceNow</span>:</p>
                                        <ol>
                                            <li value="1"><a href="#IdentifyyourServiceNowbasetargetURL" class="MCXref xref">Identify your ServiceNow base target URL</a>
                                            </li>
                                            <li value="2"><a href="#GenerateanAuthorizationheader" class="MCXref xref">Generate an Authorization header</a>
                                            </li>
                                            <li value="3"><a href="#CreatetheServiceNowconnectiontargetfromtheAlertLogicconsole" class="MCXref xref">Create the ServiceNow connection target from the Alert Logic console</a>
                                            </li>
                                            <li value="4"><a href="#Usetheconnectiontargetinconnectors" class="MCXref xref">Use the connection target in connectors and playbooks</a>
                                            </li>
                                        </ol>
                                        <h2>Identify your ServiceNow base target URL<a name="IdentifyyourServiceNowbasetargetURL"></a></h2>
                                        <p>Identify your <span class="mc-variable ALVariables.Connector_Type variable">ServiceNow</span> instance name. In the Base URL field, you must replace "&lt;myinstance&gt;" in the default URL provided in the <span class="mc-variable ALVariables.ALUI_1 variable">Alert Logic console</span> with the <span class="mc-variable ALVariables.Connector_Type variable">ServiceNow</span> instance  you want to target.</p>
                                        <p>In the ServiceNow connector configuration, the <span class="mc-variable ALVariables.ALUI variable">Alert Logic console</span> provides the rest of the default URL path that ServiceNow requires for ticket creation. The URL&#160;path in the connector is added to the base URL in the connection target to define the full URL. For more information, see <a href="../servicenow.htm" class="MCXref xref">Configure ServiceNow Webhook Connector</a>.</p>
                                        <h2>Generate an Authorization header<a name="GenerateanAuthorizationheader"></a></h2>
                                        <p><span class="mc-variable ALVariables.Connector_Type variable">ServiceNow</span> requires an HTTP Authorization request header. You can use the following instructions for your operating system to generate the header. </p>
                                        <p>The command requires a valid <span class="mc-variable ALVariables.Connector_Type variable">ServiceNow</span> user name and password, and it encodes the credentials with base64. To construct the header, you enter the word "Basic" (which is the Authorization header type), a space, and then the  base64-encoded credentials.</p>
                                        <p><span class="mc-variable ALVariables.Company variable">Alert Logic</span> stores your Authorization header securely when you save the <MadCap:conditionalText data-mc-conditions="Primary.excludeDevInBhoof">connection target</MadCap:conditionalText><MadCap:conditionalText data-mc-conditions="Primary.beta">connection</MadCap:conditionalText>.</p>
                                        <p><b>To generate the header on Linux and Mac OS X:</b>
                                        </p>
                                        <ol>
                                            <li value="1">In the command line, type the following command, including the single quotation marks:<p><kbd>echo -n '&lt;user_name&gt;:&lt;password&gt;' | base64</kbd></p><p>where you must replace &lt;user_name&gt;&#160;and &lt;password&gt; &#160;with a valid user name and password <MadCap:conditionalText data-mc-conditions="Primary.Draft Content"> (Atlassian API token generated earlier) </MadCap:conditionalText>for <span class="mc-variable ALVariables.Connector_Type variable">ServiceNow</span>.</p></li>
                                            <li value="2">Copy the following string, which you must enter in the <b>Authorization Header</b> field when you create the <MadCap:conditionalText data-mc-conditions="Primary.excludeDevInBhoof">connector</MadCap:conditionalText><MadCap:conditionalText data-mc-conditions="Primary.beta">connection</MadCap:conditionalText>:<p><kbd>Basic &lt;resulting_base64_encoded_string&gt;</kbd></p></li>
                                        </ol>
                                        <div class="example">If the user name is "admin" and the password is "testpassword" for example, the command is: <br /><br /><kbd>echo -n 'admin:testpassword' | base64</kbd> <br /><br /> and the command produces this output: <br /><br /><kbd>YWRtaW46dGVzdHBhc3N3b3Jk</kbd> <br /><br /> So, in the Authorization Header field, you would paste:<br /><br /> <kbd>Basic YWRtaW46dGVzdHBhc3N3b3Jk</kbd><br /><br /></div>
                                        <p><b>To generate the header in Windows PowerShell:</b>
                                        </p>
                                        <ol>
                                            <li value="1">In the command line, type the following commands, including the quotation marks:<p><kbd>$auth  = [System.Text.Encoding]::UTF8.GetBytes("&lt;user_name&gt;:&lt;password&gt;")</kbd></p><p>where you must replace &lt;user_name&gt;&#160;and &lt;password&gt; with a valid user name and password for <span class="mc-variable ALVariables.Connector_Type variable">ServiceNow</span>.</p><p><kbd>[System.Convert]::ToBase64String($auth)</kbd></p></li>
                                            <li value="2">Copy the following string, which you must enter in the <b>Authorization Header</b> field when you create the <MadCap:conditionalText data-mc-conditions="Primary.excludeDevInBhoof">connection target</MadCap:conditionalText><MadCap:conditionalText data-mc-conditions="Primary.beta">connection</MadCap:conditionalText>:<p><kbd>Basic &lt;resulting_base64_encoded_string&gt;</kbd></p></li>
                                        </ol>
                                        <div class="example">If the user name is "admin" and the password is "testpassword" for example, the commands are:<br /><br /><kbd>$auth  = [System.Text.Encoding]::UTF8.GetBytes("admin:testpassword")</kbd><br /><br /><kbd>[System.Convert]::ToBase64String($auth)</kbd> <br /><br />and the command produces this output: <br /><br /><kbd>YWRtaW46dGVzdHBhc3N3b3Jk</kbd> <br /><br />So, in the Authorization Header field, you would paste:<br /><br /><kbd>Basic YWRtaW46dGVzdHBhc3N3b3Jk</kbd><br /><br /></div>
                                        <div data-mc-conditions="Primary.Draft Content">
                                            <h2>Add custom header(s)<a name="Addcustomheader(s)"></a></h2>
                                            <p>You may list a single HTTP header name-value pair required by the external system per line. By default, a JSON content-type header is included to assist processing:</p>
                                            <p><kbd>Accept: application/json</kbd>
                                            </p>
                                            <p><kbd>Content-Type: application/json</kbd>
                                            </p>
                                        </div>
                                        <h2>Create the ServiceNow connection target from the <span class="mc-variable ALVariables.ALUI_1 variable">Alert Logic console</span><a name="CreatetheServiceNowconnectiontargetfromtheAlertLogicconsole"></a></h2>
                                        <ol>
                                            <li value="1">In the <span class="mc-variable ALVariables.ALUI_1 variable">Alert Logic console</span>, click the navigation menu icon (<img src="../../../Resources/Images/dashboard/menu-icon.png" style="vertical-align: bottom;" />), click <img src="../../../Resources/Images/dashboard/configure-icon.png" style="vertical-align: bottom;" /><b>Configure</b>, and then click <b>Connectors</b>.</li>
                                            <li value="2">Click the <b>Connection Targets</b> tab.</li>
                                            <li value="3">On the Connection Targets page, click the add icon (<img src="../../../Resources/Images/Icons/cdAddPlus.png" style="vertical-align: text-bottom;" />), and then click <b>ServiceNow</b>. </li>
                                            <li value="4">On the Create a ServiceNow Connection page, type a descriptive name for the connection target <span style="font-family: 'Microsoft Sans Serif'">—</span>for example, "ServiceNow Connection Target".</li>
                                            <li value="5">In  <b>Base URL</b>, replace &lt;myinstance&gt; with the ServiceNow instance name identified earlier.</li>
                                            <li value="6">In <b>Authorization Header</b>, paste the authorization header you generated earlier.</li>
                                            <li value="7">In <b>Custom Header(s)</b>, leave the following default HTTP headers that ServiceNow requires or customize the headers for advanced integrations. <p><code>Accept: application/json</code><br /><code>Content-Type: application/json</code><br /></p><p>If you add headers, each HTTP header name-value pair must be on a separate line.</p></li>
                                            <li value="8">Click <b>SAVE</b>.</li>
                                        </ol>
                                        <h2>Use the connection target in connectors<MadCap:conditionalText data-mc-conditions="Primary.Draft Content"> and playbooks</MadCap:conditionalText><a name="Usetheconnectiontargetinconnectors"></a></h2>
                                        <p data-mc-conditions="Primary.excludeDevInBhoof">After you save the connection target, the last step is to set up a connector<MadCap:conditionalText data-mc-conditions="Primary.Draft Content"> or automated response playbook</MadCap:conditionalText>. For more information on connectors, see <a href="../connectors.htm" class="MCXref xref" data-mc-variable-override="">Connectors Configuration Guide</a>.<MadCap:conditionalText data-mc-conditions="Primary.Draft Content"> For more information on automated response, see <a href="../../../respond/automated-response.htm" class="MCXref xref" data-mc-variable-override="">Get Started with Automated Response (Beta)</a>.</MadCap:conditionalText></p>
                                        <p data-mc-conditions="Primary.beta">After you save the connection, the last step is to set up a templated connection<MadCap:conditionalText data-mc-conditions="Primary.Draft Content"> or automated response playbook</MadCap:conditionalText>. For more information on templated connections, see <a href="../../connections/templated/templated-connections.htm" class="MCXref xref" data-mc-variable-override="">Templated Connections Configuration Guide</a>.<MadCap:conditionalText data-mc-conditions="Primary.Draft Content"> For more information on automated response, see <a href="../../../respond/get-started-automated-response.htm" class="MCXref xref" data-mc-variable-override="">Get Started with Automated Response</a>.</MadCap:conditionalText></p>
                                        <h2>Manage connection targets</h2>
                                        <p data-mc-conditions="Primary.excludeDevInBhoof">You can view the list of connection targets and edit or delete an existing one. For more information, see <a href="manage-connection-targets.htm" class="MCXref xref" data-mc-variable-override="">Manage Connection Targets</a>.</p>
                                        <p data-mc-conditions="Primary.beta">You can view the list of connections and edit or delete an existing one. For more information, see <a href="../../connections/manage-connections.htm" class="MCXref xref" data-mc-variable-override="">Manage Connections</a>.</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>