<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Side_Navigation_Skin" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../../" data-mc-has-content-body="True" data-mc-searchable="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta name="zd-site-verification" content="9muqcovj07pyvoduai2al" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../Skins/Favicons/browserconfig.xml" />
        <meta name="description" content="A universal webhook connection target securely stores reusable authentication credential and URL path information for integrations with univeral webhooks." />
        <link rel="apple-touch-icon" sizes="1545x1545" href="../../../../Skins/Favicons/AlertLogic_Logo_2C_RGB_V_Standard.png" />
        <link rel="shortcut icon" href="../../../../Skins/Favicons/favicon.png" />
        <link rel="icon" sizes="96x96" href="../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../Skins/Favicons/favicon-16x16.png" /><title>Configure Universal Webhook Connection Target</title>
        <meta http-equiv="Cache-control" content="no-cache" />
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <style>@import url('https://richg-github.github.io/al-styles/override-main.css');

</style>
        <link href="../../../Resources/Stylesheets/MainStyles.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.next-topic-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.separator-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.print-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.expand-all-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.needs-pie
{
	behavior: url('../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link rel="apple-touch-icon" sizes="1545x1545" href="../../../../Skins/Favicons/AlertLogic_Logo_2C_RGB_V_Standard.png" />
        <link rel="shortcut icon" href="../../../../Skins/Favicons/favicon.png" />
        <link rel="icon" sizes="96x96" href="../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 1279px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../../home.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <div class="buttons popup-container clearfix topicToolbarProxy _Skins_Toolbar mc-component nocontent" style="mc-topic-toolbar-items: ;">
                                        <div class="button-group-container-left">
                                            <button class="button needs-pie previous-topic-button" title="Navigate previous" disabled="true">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Navigate previous">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                            <button class="button needs-pie next-topic-button" title="Navigate next" disabled="true">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Navigate next">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                            <div class="button-separator">
                                            </div>
                                            <button class="button needs-pie print-button" title="Print">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Print">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                            <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                        </div>
                                    </div>
                                    <div role="main" id="mc-main-content">
                                        <h1>Configure Universal Webhook Connection Target</h1>
                                        <p>A universal webhook connection target securely stores reusable authentication credential and URL path information for integrations with a third-party application. You can use the universal webhook if a specific connection target is not available. </p>
                                        <p>Complete the following steps to successfully configure the universal webhook connection target:</p>
                                        <ol>
                                            <li value="1"><a href="#IdentifyyourwebhookbasetargetURL" class="MCXref xref">Identify your webhook base URL&#160;target</a>
                                            </li>
                                            <li value="2"><a href="#(Optional)GenerateanAuthorizationheader" class="MCXref xref">(Optional) Generate an Authorization header</a>
                                            </li>
                                            <li value="3"><a href="#(Optional)Addcustomheader(s)" class="MCXref xref">(Optional)&#160;Add custom header(s)</a>
                                            </li>
                                            <li value="4"><a href="#CreatetheUniversalwebhookconnectiontargetintheAlertLogicconsole" class="MCXref xref">Create the universal Webhook connection target from the Alert Logic console</a>
                                            </li>
                                            <li value="5"><a href="#Usetheconnectiontargetinconnectors" class="MCXref xref">Use the connection target in connectors and playbooks</a>
                                            </li>
                                        </ol>
                                        <div class="note">Before you create the webhook connection target in the <span class="mc-variable ALVariables.ALUI_1 variable">Alert Logic console</span>, gather the information that your third-party application requires by consulting the vendor documentation.</div>
                                        <h2>Identify your webhook base URL&#160;target<a name="IdentifyyourwebhookbasetargetURL"></a></h2>
                                        <p>Note the URL for your application that can accept <span class="mc-variable ALVariables.Company variable">Alert Logic</span> notifications or ticket creation requests. Some applications require that you generate a target URL&#160;that includes a token for authorization.</p>
                                        <p><b>To set up a simple connection target:</b>
                                        </p>
                                        <p>Copy the entire third-party-generated URL, which you must paste into the base URL field in the <span class="mc-variable ALVariables.ALUI_1 variable">Alert Logic console</span> later. You will not need to add additional target URL information in the <a href="../webhooks.htm" class="MCXref xref">Configure a Universal Webhook Connector</a>  configuration.</p>
                                        <p><b>To set up a generic connection target for multiple integrations with the application:</b>
                                        </p>
                                        <p>Copy only the base URL&#160;path information from the URL generated by the application.  You will need to specify exact URL target information in <a href="../webhooks.htm" class="MCXref xref">Configure a Universal Webhook Connector</a>. </p>
                                        <div class="example">For example, "https://webhooks.3rdparty.com/api"  could be used in the base URL field in the connection target configuration, and "/&lt;unique-integration-id&gt;" could be used as the target URL field in the connector configuration.</div>
                                        <h2>(Optional) Generate an Authorization header<a name="(Optional)GenerateanAuthorizationheader"></a></h2>
                                        <p> If the third-party application to which you want to connect requires a Basic HTTP Authorization request header, you can use these instructions to generate the header. The command requires the valid user name and password in the application to which you want to connect, and it encodes the credentials with base64. </p>
                                        <div class="note">Some types of external applications require that the password field must be an API token or integration key generated in your external application account. For more information, refer to the documentation for your external application.</div>
                                        <p>In the Authorization Header field, you enter the word "Basic" (which is the Authorization header type), a space, and then the  base64-encoded credentials.</p>
                                        <p><b>To generate the header on Linux and Mac OS X:</b>
                                        </p>
                                        <ol>
                                            <li value="1">In the command line, type the following command, including the single quotation marks:<p><kbd>echo -n '&lt;user_name&gt;:&lt;password&gt;' | base64</kbd></p><p>where you must replace &lt;user_name&gt;&#160;and &lt;password&gt; with a valid user name and password for the third-party application.</p></li>
                                            <li value="2">Copy the following string, which you must enter in the <b>Authorization Header</b> field when you create the connection target:<p><kbd>Basic &lt;resulting_base64_encoded_string&gt;</kbd></p></li>
                                        </ol>
                                        <div class="example">If the user name is "admin" and the password is "testpassword" for example, the command is:<br /><br /><kbd>echo -n 'admin:testpassword' | base64</kbd><br /><br />and the command produces this output: <br /><br /><kbd>YWRtaW46dGVzdHBhc3N3b3Jk</kbd><br /><br />So, in the <b>Authorization Header</b> field, you would paste:<br /><br /><kbd>Basic YWRtaW46dGVzdHBhc3N3b3Jk</kbd><br /><br /></div>
                                        <p><b>To generate the header in Windows PowerShell:</b>
                                        </p>
                                        <ol>
                                            <li value="1">In the command line, type the following commands, including the quotation marks:<p><kbd>$auth  = [System.Text.Encoding]::UTF8.GetBytes("&lt;user_name&gt;:&lt;password&gt;")</kbd></p><p>where you must replace &lt;user_name&gt;&#160;and &lt;password&gt; with a valid user name and password for your third-party application.</p><p><kbd>[System.Convert]::ToBase64String($auth)</kbd></p></li>
                                            <li value="2">Copy the following string, which you must enter in the <b>Authorization Header</b> field when you create the connection target:<p><kbd>Basic &lt;resulting_base64_encoded_string&gt;</kbd></p></li>
                                        </ol>
                                        <div class="example">If the user name is "admin" and the password is "testpassword" for example, the commands are:<br /><br /><kbd>$auth  = [System.Text.Encoding]::UTF8.GetBytes("admin:testpassword")</kbd><br /><br /><kbd>[System.Convert]::ToBase64String($auth)</kbd><br /><br />and the command produces this output: <br /><br /><kbd>YWRtaW46dGVzdHBhc3N3b3Jk</kbd><br /><br />So, in the <b>Authorization Header</b> field, you would paste:<br /><br /><kbd>Basic YWRtaW46dGVzdHBhc3N3b3Jk</kbd></div>
                                        <h2>(Optional)&#160;Add custom header(s)<a name="(Optional)Addcustomheader(s)"></a></h2>
                                        <p>Some applications require one or more HTTP custom headers. Custom headers are HTTP name-value pairs in the format <i>Header-Name</i>: <i>value</i> with each header field on a separate line, for example: </p>
                                        <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">Copy</a>
                                            <div style="mc-code-lang: PlainText;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>Accept: application/json<br />Content-Type: application/json</code></pre>
                                            </div>
                                        </div>
                                        <h2>Create the universal Webhook connection target from the <span class="mc-variable ALVariables.ALUI_1 variable">Alert Logic console</span><a name="CreatetheUniversalwebhookconnectiontargetintheAlertLogicconsole"></a></h2>
                                        <ol>
                                            <li value="1">In the <span class="mc-variable ALVariables.ALUI_1 variable">Alert Logic console</span>, click the navigation menu icon (<img src="../../../Resources/Images/dashboard/menu-icon.png" style="vertical-align: bottom;" />), click <img src="../../../Resources/Images/dashboard/configure-icon.png" style="vertical-align: bottom;" /><b>Configure</b>, and then click <b>Connectors</b>.</li>
                                            <li value="2">Click the <b>Connection Targets</b> tab.</li>
                                            <li value="3">On the Connection Targets page, click the add icon (<img src="../../../Resources/Images/Icons/cdAddPlus.png" style="vertical-align: text-bottom;" />), and then click <b>Webhook</b>. </li>
                                            <li value="4">On the Create a <span class="ALVariables.Connector_Type mc-variable"></span> Connection page, type a descriptive name for the connection target <span style="font-family: 'Microsoft Sans Serif'">—</span>for example, "Webhook Connection Target".</li>
                                            <li value="5">In  <b>Base URL</b>, paste the URL identified earlier.</li>
                                            <li value="6">In <b>Authorization Header</b>, paste the authorization header you generated earlier.</li>
                                            <li value="7">In <b>Custom Header(s)</b>, enter the custom headers identified earlier. Each HTTP header name-value pair must be on a separate line.</li>
                                            <li value="8">Click <b>SAVE</b>.</li>
                                        </ol>
                                        <h2>Use the connection target in connectors<MadCap:conditionalText data-mc-conditions="Primary.Draft Content"> and playbooks</MadCap:conditionalText><a name="Usetheconnectiontargetinconnectors"></a></h2>
                                        <p data-mc-conditions="Primary.excludeDevInBhoof">After you save the connection target, the last step is to set up a connector<MadCap:conditionalText data-mc-conditions="Primary.Draft Content"> or automated response playbook</MadCap:conditionalText>. For more information on connectors, see <a href="../connectors.htm" class="MCXref xref" data-mc-variable-override="">Connectors Configuration Guide</a>.<MadCap:conditionalText data-mc-conditions="Primary.Draft Content"> For more information on automated response, see <a href="../../../respond/automated-response.htm" class="MCXref xref" data-mc-variable-override="">Get Started with Automated Response (Beta)</a>.</MadCap:conditionalText></p>
                                        <p data-mc-conditions="Primary.beta">After you save the connection, the last step is to set up a templated connection<MadCap:conditionalText data-mc-conditions="Primary.Draft Content"> or automated response playbook</MadCap:conditionalText>. For more information on templated connections, see <a href="../../connections/templated/templated-connections.htm" class="MCXref xref" data-mc-variable-override="">Templated Connections Configuration Guide</a>.<MadCap:conditionalText data-mc-conditions="Primary.Draft Content"> For more information on automated response, see <a href="../../../respond/get-started-automated-response.htm" class="MCXref xref" data-mc-variable-override="">Get Started with Automated Response</a>.</MadCap:conditionalText></p>
                                        <h2>Manage connection targets</h2>
                                        <p data-mc-conditions="Primary.excludeDevInBhoof">You can view the list of connection targets and edit or delete an existing one. For more information, see <a href="manage-connection-targets.htm" class="MCXref xref" data-mc-variable-override="">Manage Connection Targets</a>.</p>
                                        <p data-mc-conditions="Primary.beta">You can view the list of connections and edit or delete an existing one. For more information, see <a href="../../connections/manage-connections.htm" class="MCXref xref" data-mc-variable-override="">Manage Connections</a>.</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>