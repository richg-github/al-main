<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Side_Navigation_Skin" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../" data-mc-has-content-body="True" data-mc-toc-path="Configure|Collectors" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta name="zd-site-verification" content="9muqcovj07pyvoduai2al" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../Skins/Favicons/browserconfig.xml" />
        <meta name="description" content="Learn how to configure the AWS Network Firewall collector and integrate it with Alert Logic in the Application Registry page to start collecting alert data that you can search in the Alert Logic console." />
        <meta name="keywords" content="vanta" />
        <link rel="apple-touch-icon" sizes="1545x1545" href="../../../Skins/Favicons/AlertLogic_Logo_2C_RGB_V_Standard.png" />
        <link rel="shortcut icon" href="../../../Skins/Favicons/favicon.png" />
        <link rel="icon" sizes="96x96" href="../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon-16x16.png" /><title>Configure AWS Network Firewall Log Collector</title>
        <meta http-equiv="Cache-control" content="no-cache" />
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <style>@import url('https://richg-github.github.io/al-styles/override-main.css');

</style>
        <link href="../../Resources/Stylesheets/MainStyles.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.next-topic-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.separator-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.print-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.expand-all-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.needs-pie
{
	behavior: url('../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link rel="apple-touch-icon" sizes="1545x1545" href="../../../Skins/Favicons/AlertLogic_Logo_2C_RGB_V_Standard.png" />
        <link rel="shortcut icon" href="../../../Skins/Favicons/favicon.png" />
        <link rel="icon" sizes="96x96" href="../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 1279px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../home.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <div class="buttons popup-container clearfix topicToolbarProxy _Skins_Toolbar mc-component nocontent" style="mc-topic-toolbar-items: ;">
                                        <div class="button-group-container-left">
                                            <button class="button needs-pie previous-topic-button" title="Navigate previous" disabled="true">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Navigate previous">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                            <button class="button needs-pie next-topic-button" title="Navigate next" disabled="true">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Navigate next">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                            <div class="button-separator">
                                            </div>
                                            <button class="button needs-pie print-button" title="Print">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Print">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                            <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                        </div>
                                    </div>
                                    <div class="nocontent">
                                        <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                        </div>
                                    </div>
                                    <div role="main" id="mc-main-content">
                                        <h1>Configure <span class="mc-variable ALVariables.AWS variable">AWS</span> Network Firewall Log Collector</h1>
                                        <p>The <span class="mc-variable ALVariables.Company variable">Alert Logic</span> <span class="mc-variable ALVariables.AWS_1 variable">Amazon Web Services (AWS)</span> Network Firewall log collector is  designed to collect <span class="mc-variable ALVariables.AWS variable">AWS</span> Network Firewall alerts delivered to an Amazon Simple Storage Service (S3) bucket. You can find <span class="mc-variable ALVariables.AWS variable">AWS</span> Network Firewall alerts collected with keyword search in the <span class="mc-variable ALVariables.ALUI_1 variable">Alert Logic console</span> <a href="../../get-started/search-a.htm" class="MCXref xref">Get Started with Search</a> page. The message type is "<span class="mc-variable ALVariables.AWS variable">AWS</span> Network Firewall Alert." You can create correlations to generate incidents from these alerts. For more information, see <a href="../notifications/log-correlation.htm" class="MCXref xref">Correlations and Notifications</a>. <MadCap:conditionalText data-mc-conditions="Primary.Draft Content"><span class="mc-variable ALVariables.Company variable">Alert Logic</span> also generates security incidents from <span class="mc-variable ALVariables.AWS variable">AWS</span> Network Firewall alerts in the <a href="../../analyze/incidents.htm" class="MCXref xref">Incidents</a> page. For more information about firewall application security content, see <a href="../../analyze/firewall-incidents.htm" class="MCXref xref">Firewall Incidents and Log Configuration</a>.</MadCap:conditionalText></p>
                                        <p>You must complete the following to successfully configure your <span class="mc-variable ALVariables.AWS variable">AWS</span> Network Firewall log collector:</p>
                                        <ol>
                                            <li value="1"><a href="#SetupanSNStopicandIAMroleinyourAWSaccount" class="MCXref xref">Set up an SNS topic and IAM role in your AWS account</a>
                                            </li>
                                            <li value="2"><a href="#SetupS3notificationsinyourAWSaccount" class="MCXref xref">Set up S3 notifications in your AWS account</a>
                                            </li>
                                            <li value="3"><a href="#ConfigurecollectionintheAlertLogicconsole" class="MCXref xref">Configure collection in the Alert Logic console</a>
                                            </li>
                                            <li value="4"><a href="#AddAlertLogicfirewallrulestoyourAWSNetworkFirewallpolicy" class="MCXref xref">Add Alert Logic firewall rules to your AWS Network Firewall policy</a>
                                            </li>
                                        </ol>
                                        <p data-mc-conditions="Primary.inBhoofAndDev">You can use the same setup in <span class="mc-variable ALVariables.AWS variable">AWS</span> for configuring the <span class="mc-variable ALVariables.AWS variable">AWS</span> Network Firewall log collector and the <a href="amazon-s3.htm">Amazon S3 log collector</a>.  If you have already completed the setup in <span class="mc-variable ALVariables.AWS variable">AWS</span> and want to reuse it, you can skip to <a href="#ConfigurecollectionintheAlertLogicconsole" class="MCXref xref">Configure collection in the Alert Logic console</a>.</p>
                                        <div data-mc-conditions="Primary.Draft Content">
                                            <p>You can use the same setup in <span class="mc-variable ALVariables.AWS variable">AWS</span> for configuring integration with these services available in the Application Registry when you click the <span class="mc-variable ALVariables.AWS variable">AWS</span> tile:</p>
                                            <ul>
                                                <li data-mc-conditions="Primary.Draft Content">Amazon EC2</li>
                                                <li> Elastic Load Balancing</li>
                                                <li><span class="mc-variable ALVariables.AWS variable">AWS</span> Network Firewall</li>
                                                <li>Amazon Redshift</li>
                                                <li>Amazon S3 Audit</li>
                                                <li>Amazon VPC Flow Logs</li>
                                            </ul>
                                            <p>If you have already completed the setup in <span class="mc-variable ALVariables.AWS variable">AWS</span>&#160;and want to reuse it, you can skip to <a href="#ConfigurecollectionintheAlertLogicconsole" class="MCXref xref">Configure collection in the Alert Logic console</a>. </p>
                                        </div>
                                        <h2>Set up an SNS topic and IAM role in your <span class="mc-variable ALVariables.AWS variable">AWS</span> account<a name="SetupanSNStopicandIAMroleinyourAWSaccount"></a></h2>
                                        <div>
                                            <p>In the <span class="mc-variable ALVariables.AWS variable">AWS</span> account that hosts your S3 buckets, you must set up an Amazon Simple Notification Service (SNS) topic where <span class="mc-variable ALVariables.AWS variable">AWS</span>&#160;publishes S3 notifications. You must also set up an IAM role to grant <span class="mc-variable ALVariables.Company variable">Alert Logic</span> access to your S3 buckets.</p>
                                            <p>Use an <span class="mc-variable ALVariables.AWS variable">AWS</span> CloudFormation template that <span class="mc-variable ALVariables.Company variable">Alert Logic</span> provides to set up the SNS topic and IAM role, or you can set them up manually.</p>
                                        </div>
                                        <h3>Set up an SNS topic and IAM role with a CloudFormation template</h3>
                                        <p><span class="mc-variable ALVariables.Company variable">Alert Logic</span> recommends that you deploy the <span class="mc-variable ALVariables.Company variable">Alert Logic</span> CloudFormation template to set up the SNS topic and IAM role.</p>
                                        <p><b>To set up an SNS topic and IAM role with a CloudFormation template:</b>
                                        </p>
                                        <ol>
                                            <li value="1">Click the following link, and ensure you select the same region as your S3 bucket. Note this region identifier (for example, <b>us-east-2</b> for Ohio), which you need when you configure the collector in the <span class="mc-variable ALVariables.ALUI_1 variable">Alert Logic console</span>.<p><a href="https://console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/create/review?stackName=alertlogic-s3-collection&amp;templateURL=https://alertlogic-collectors-us-east-1.s3.amazonaws.com/cfn/s3-collector-support.template">https://console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/create/review?stackName=alertlogic-s3-collection&amp;templateURL=https://alertlogic-collectors-us-east-1.s3.amazonaws.com/cfn/s3-collector-support.template</a></p></li>
                                            <li value="2">Under <b>Parameters</b>, in the <b>External ID</b> field, enter your <span class="mc-variable ALVariables.Company variable">Alert Logic</span> Account ID.</li>
                                            <li value="3">In the <b>Stack Name</b> and <b>AlertLogicAWSAccountId</b> fields, leave the default values.</li>
                                            <li value="4">Select the <b>I acknowledge that AWS CloudFormation might create IAM resources with custom names</b> check box.</li>
                                            <li value="5">Click <b>Create stack</b> to deploy the stack.</li>
                                            <li value="6">View the stack output to retrieve the IAM Role ARN, SNS Topic ARN, and External ID, which you need when you configure the collector in the <span class="mc-variable ALVariables.ALUI_1 variable">Alert Logic console</span>.</li>
                                        </ol>
                                        <h3>Set up an SNS topic and IAM Role manually</h3>
                                        <p>If you are unable to use CloudFormation in your <span class="mc-variable ALVariables.AWS variable">AWS</span> account, you can use the following procedures instead to set up the SNS topic and IAM role manually.</p>
                                        <h4>Set up an SNS topic for S3 notifications manually</h4>
                                        <p>In the <span class="mc-variable ALVariables.AWS variable">AWS</span> account that <span class="mc-variable ALVariables.Company variable">Alert Logic</span> protects, you must create an Amazon SNS topic  to which Amazon S3 can publish notifications. The SNS topic must be in the same region as your S3 bucket. </p>
                                        <p>You must also configure the SNS topic access policy to allow S3 to publish notifications to the topic and grant <span class="mc-variable ALVariables.Company variable">Alert Logic</span> permission  to receive and process S3 notifications, specifically object created events. </p>
                                        <p><b>To set up an SNS topic for S3 notifications manually:</b>
                                        </p>
                                        <ol>
                                            <li value="1">Sign in to the Amazon SNS console.</li>
                                            <li value="2">In the left navigation pane, choose <b>Topics</b>.</li>
                                            <li value="3">Choose to create a <b>Standard</b> topic.</li>
                                            <li value="4">In the <b>Details</b> section, enter a descriptive <b>Name</b> for the topic (for example,  my-sns-topic).</li>
                                            <li value="5">Click this link to download the <a href="../../pdf-files/s3-sns-access-policy.json" target="_blank" title="Alert Logic S3 SNS access policy document (JSON file)" alt="Alert Logic S3 SNS access policy document (JSON file)">S3 SNS access policy document (JSON file)</a>. Keep the link open so you can edit the  example as described next.</li>
                                            <li value="6">In the <b>Access policy</b> section, use the downloaded example to configure the SNS topic access policy to allow S3 to publish notifications to the topic and grant <span class="mc-variable ALVariables.Company variable">Alert Logic</span> permission  to subscribe to updates. <p>The example allows the publishing of S3 notifications from S3 bucket "my-bucket" in <span class="mc-variable ALVariables.AWS variable">AWS</span>&#160;account 123456789101 to an SNS topic with ARN arn:aws:sns:us-east-2: 123456789101:my-sns-topic. It also grants <span class="mc-variable ALVariables.Company variable">Alert Logic</span> permission to subscribe to the SNS topic. Edit the example as follows:</p><ol style="list-style-type: lower-alpha;"><li value="1">Replace values  for the SNS topic ARN in lines 15 and 32.<p><img src="../../Resources/Images/collectors/s3-json-line-15.png" /></p><p><img src="../../Resources/Images/collectors/s3-json-line-32.png" /></p></li><li value="2">Replace the <span class="mc-variable ALVariables.AWS variable">AWS</span>&#160;account in line 18.<p><img src="../../Resources/Images/collectors/s3-json-line-18.png" /></p></li><li value="3">Replace the S3 bucket name in line 21.<p><img src="../../Resources/Images/collectors/s3-json-line-21.png" /></p></li><li value="4">Add the statements to your SNS access policy.</li></ol></li>
                                            <li value="7">Scroll to the end of the form and choose <b>Create topic</b>.</li>
                                        </ol>
                                        <h4>Set up an IAM role in <span class="mc-variable ALVariables.AWS variable">AWS</span> for your S3 buckets manually</h4>
                                        <p><span class="mc-variable ALVariables.Company variable">Alert Logic</span> uses <span class="mc-variable ALVariables.AWS variable">AWS</span> IAM role-based authentication to enable access to your S3 buckets. Before you configure your S3 collector in the <span class="mc-variable ALVariables.ALUI variable">Alert Logic console</span>, you must first create an IAM role with the necessary permissions that <span class="mc-variable ALVariables.Company variable">Alert Logic</span> can use to retrieve objects from S3.</p>
                                        <p><b>To create an IAM role for your S3 buckets manually:</b>
                                        </p>
                                        <ol>
                                            <li value="1">In the <span class="mc-variable ALVariables.AWS variable">AWS</span> console, navigate to the IAM service.</li>
                                            <li value="2">Under <b>Roles</b>, click <b>Create Role</b>.</li>
                                            <li value="3">Select <b>Another AWS Account</b>.</li>
                                            <li value="4">In the <b>Account ID</b> field, enter <b>230378978437</b>.</li>
                                            <li value="5">Under <b>Options</b>, select <b>Require external ID</b>, and enter an external ID of your choosing. Make note of it. You will need the value when you configure the collection in the <span class="mc-variable ALVariables.ALUI_1 variable">Alert Logic console</span>.</li>
                                            <li value="6">Click this link to download the <a href="../../pdf-files/s3-iam-policy.json" target="_blank" title="Alert Logic S3 IAM policy document (JSON file)" alt="Alert Logic S3 IAM policy document (JSON file)">S3 IAM policy document (JSON file)</a>. Keep the link open so you can copy and paste the information in the next step.</li>
                                            <li value="7">Under <b>Permissions</b>, click <b>Create policy</b>, and then paste the JSON&#160;policy.</li>
                                            <div class="note">To limit the buckets this role can access, enter their names in the JSON policy <b>Resource</b> field.</div>
                                            <li value="8">In the <b>Review Policy</b> section, type a descriptive <b>Policy name</b> (for example, AlertLogicS3AccessPolicy).</li>
                                            <li value="9">Return to your Role creation page, and then click the policy you created.</li>
                                            <li value="10">Type a <b>Role name</b>, and then click <b>Create Role</b>.</li>
                                            <li value="11">Note the Role ARN value, which you will need when you configure the collection in the <span class="mc-variable ALVariables.ALUI_1 variable">Alert Logic console</span>.</li>
                                        </ol>
                                        <h2>Set up S3 notifications in your <span class="mc-variable ALVariables.AWS variable">AWS</span> account<a name="SetupS3notificationsinyourAWSaccount"></a></h2>
                                        <p>The next step is to send Amazon S3 notifications to the Amazon SNS topic you set up.</p>
                                        <p><b>To set up  S3 notifications:</b>
                                        </p>
                                        <ol>
                                            <li value="1">Log in to <span class="mc-variable ALVariables.AWS variable">AWS</span> and navigate to the Amazon S3 service console. </li>
                                            <li value="2">Select the S3 bucket that collects the logs you want <span class="mc-variable ALVariables.Company variable">Alert Logic</span> to process. </li>
                                            <li value="3">In the <b>Properties</b> tab, under <b>Advanced settings</b>, click the <b>Events</b> tile.</li>
                                            <li value="4">Click <b>Add notification</b>.</li>
                                            <li value="5">In the <b>Name</b> field, type a descriptive name for this event.</li>
                                            <li value="6"> Select the <b>All object create events</b> check box.</li>
                                            <li value="7">(Optional) To limit the objects that <span class="mc-variable ALVariables.Company variable">Alert Logic</span> receives notifications about, add the prefix in the <b>Prefix</b> field. Use this option if, for example, you store your logs in a particular folder. </li>
                                            <li value="8">Leave the <b>Suffix</b> field blank.</li>
                                            <li value="9">Click the <b>Send to</b> drop-down box, and then select <b>SNS topic</b>.</li>
                                            <li value="10">Select the SNS topic created in the previous procedure, and then click <b>Save</b>.</li>
                                        </ol>
                                        <p>A message notifies you whether the event was created successfully, and if not, provides troubleshooting tips.</p>
                                        <div>
                                            <h2>Configure collection in the <span class="mc-variable ALVariables.ALUI_1 variable">Alert Logic console</span><a name="ConfigurecollectionintheAlertLogicconsole"></a></h2>
                                            <p>After you set up the SNS topic, IAM role for your S3 buckets, and S3 event notifications  in <span class="mc-variable ALVariables.AWS variable">AWS</span>, you must complete the next step of the collection configuration process in the <span class="mc-variable ALVariables.ALUI_1 variable">Alert Logic console</span>. This configuration is an account-level integration, which means you can configure more than one instance of <span class="mc-variable ALVariables.AWS variable">AWS</span> Network Firewall log collection. This capability is useful when  more than one instance of the application exists.</p>
                                            <p>To access the Application Registry page, click the menu icon (<img src="../../Resources/Images/dashboard/menu-icon.png" style="vertical-align: bottom;" />) from the Dashboards page. Click <img src="../../Resources/Images/dashboard/configure-icon.png" style="vertical-align: bottom;" /><b>Configure</b>, and then click <b>Application Registry</b>.</p>
                                            <p><b>To add a new application collection</b>:</p>
                                            <ol>
                                                <li value="1">In the Application Registry, click the <b>AWS</b> tile, and then click <b>AWS Network Firewall</b>.</li>
                                                <li value="2">In the <b>Application Name</b> field, enter a name for this AWS Network Firewall collection instance. 
                </li>
                                                <li value="3">Under  <b>Collection Method and Policy</b>, in the <b>Role ARN</b>&#160;field, enter the ARN for the IAM role granting access to your S3 bucket that you noted earlier.</li>
                                                <li value="4"> In the <b>External ID</b> field, enter the value in the <b>External ID</b> field that you noted earlier.</li>
                                                <li value="5">In the <b>S3 Bucket Name</b> field, enter the name of the S3 bucket from which to collect alerts.</li>
                                                <li value="6">(Optional) If you want <span class="mc-variable ALVariables.Company variable">Alert Logic</span> to collect logs from a particular folder in your S3 bucket, in the <b>S3 Object Key Prefix</b> field enter the prefix that identifies the folder, followed by a slash (for example, "logs/"). Leave this field blank if you want <span class="mc-variable ALVariables.Company variable">Alert Logic</span> to collect all objects in the bucket. </li>
                                                <li value="7">In the <b>SNS Topic ARN</b> field, enter the ARN of the SNS topic created earlier that receives S3 notifications (for example, arn:aws:sns:us-east-2: 123456789101:my-sns-topic).</li>
                                                <li value="8">In the <b>SNS Topic Region</b> field, select the <span class="mc-variable ALVariables.AWS variable">AWS</span> region where S3 sends notifications when data is stored in S3.</li>
                                                <li value="9">Under <b>Firewall Rules</b>, click <b>DOWNLOAD THE RULES</b>. You need these <span class="mc-variable ALVariables.Company variable">Alert Logic</span> IPS rules to finish the integration in the next procedure.</li>
                                                <li value="10">Click <b>ADD</b>.
Wait a few minutes for the application to create and appear in your application list. Do not click <b>ADD</b> again. </li>
                                            </ol>
                                            <p>
                                                <MadCap:conditionalText data-mc-conditions="Primary.inBhoofAndDev">In the Applications List tab, if you configured your application correctly, within approximately 10 minutes you will see Configured next to the application. </MadCap:conditionalText>
                                                <MadCap:conditionalText data-mc-conditions="Primary.Draft Content">In the Configured Applications tab, if you configured your application correctly, within approximately 10 minutes you will see the application listed. </MadCap:conditionalText>For more information about how to add instances or manage existing collecting applications, see <a href="../application-registry.htm#Configur" class="MCXref xref">Manage your configured applications</a>.</p>
                                            <p>The Health console also indicates whether the application collector  is healthy or unhealthy. For more information, see <a href="../../analyze/health.htm" class="MCXref xref">Health</a>.</p>
                                            <h2>Add <span class="mc-variable ALVariables.Company variable">Alert Logic</span> firewall rules to your <span class="mc-variable ALVariables.AWS variable">AWS</span> Network Firewall policy<a name="AddAlertLogicfirewallrulestoyourAWSNetworkFirewallpolicy"></a></h2>
                                            <p><span class="mc-variable ALVariables.Company variable">Alert Logic</span> provides stateful firewall rules compatible with Suricata and Snort open source IPS rule specifications. For full integration with <span class="mc-variable ALVariables.Company variable">Alert Logic</span>, you must download the <span class="mc-variable ALVariables.Company variable">Alert Logic</span> firewall rules  (see <a href="#ConfigurecollectionintheAlertLogicconsole" class="MCXref xref">Configure collection in the Alert Logic console</a>), create a firewall rule group in <span class="mc-variable ALVariables.AWS variable">AWS</span> with the <span class="mc-variable ALVariables.Company variable">Alert Logic</span> rules, and then add the rule group to your firewall policy.</p>
                                            <p>The following procedure explains how to complete the process in the <span class="mc-variable ALVariables.AWS variable">AWS</span> console, but you can use <span class="mc-variable ALVariables.AWS variable">AWS</span> APIs instead.</p>
                                            <p>If you load the rules into your network firewall policy and an event occurs that matches a rule, <span class="mc-variable ALVariables.AWS variable">AWS</span> produces a message that <span class="mc-variable ALVariables.Company variable">Alert Logic</span> collects<MadCap:conditionalText data-mc-conditions="Primary.Draft Content">, and <span class="mc-variable ALVariables.Company variable">Alert Logic</span> generates a medium threat level incident based on the event</MadCap:conditionalText>. <span class="mc-variable ALVariables.Company variable">Alert Logic</span> also collects events that you configure with other rules<MadCap:conditionalText data-mc-conditions="Primary.Draft Content">, but those rules do not generate incidents in <span class="mc-variable ALVariables.Company variable">Alert Logic</span></MadCap:conditionalText>. </p>
                                            <p><b>To add </b><span style="font-weight: bold;" class="mc-variable ALVariables.Company variable">Alert Logic</span><b> firewall rules to your firewall policy:</b>
                                            </p>
                                            <ol>
                                                <li value="1">In the <span class="mc-variable ALVariables.AWS variable">AWS</span> console, browse to the VPC page.</li>
                                                <li value="2">In the navigation pane on the left, click <b>Firewalls</b>.</li>
                                                <li value="3">Follow instructions on the page to create the firewall to which you want to add <span class="mc-variable ALVariables.Company variable">Alert Logic</span> IPS rules or select an existing firewall.</li>
                                                <li value="4">In the <b>Stateful rule groups</b> section, click <b>Add rule groups</b>, and then select <b>Create and add new stateful rule group</b>.</li>
                                                <li value="5">Enter details about the stateful rule group, and under <b>Choose how you want to configure the stateful rules</b>, select <b>Suricata compatible IPS&#160;rules</b>.</li>
                                                <li value="6">Under <b>Suricata compatible IPS rules</b>, select <b>Enter Suricata compatible IPS rules</b>, and then paste the contents of the file you downloaded in the previous procedure in the  field provided.</li>
                                                <li value="7">Under <b>Action</b>, select <b>Alert</b>.</li>
                                                <li value="8">Follow <span class="mc-variable ALVariables.AWS variable">AWS</span> instructions to associate the <span class="mc-variable ALVariables.Company variable">Alert Logic</span> rule group you created with the firewall policy.</li>
                                            </ol>
                                            <div data-mc-conditions="Primary.Draft Content">
                                                <h2>Security content for Incidents</h2>
                                                <p><span class="mc-variable ALVariables.Company variable">Alert Logic</span> builds collectors to capture data from AWS Network Firewall and various other applications to create security content that is used to generate incidents for key security use cases. The following security incidents are available for AWS Network Firewall:</p>
                                                <ul>
                                                    <li>Administrative Actions?</li>
                                                    <li>User Login AD?</li>
                                                    <li>User Behavior AD?</li>
                                                </ul>
                                                <p>For more information about authentication application security content, see <a href="../../analyze/security-incidents.htm" class="MCXref xref">Authentication Application Security Incidents</a>.</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>